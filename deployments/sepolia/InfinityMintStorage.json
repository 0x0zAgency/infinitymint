{
  "address": "0xA32D3A516007b0Cf7590B8169Dc9c30E3ab48cBb",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "PermissionChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "addToRegisteredTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "deleteFromRegisteredTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "deleteOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "previewCount",
          "type": "uint256"
        }
      ],
      "name": "deletePreview",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "previewCount",
          "type": "uint256"
        }
      ],
      "name": "findPreviews",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "forceTokenFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllRegisteredTokens",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getOption",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPreviewAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getPreviewTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getRegisteredTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "hasDestinaton",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "previewTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "previews",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "pathId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "pathSize",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentTokenId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "mintData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "option",
          "type": "string"
        }
      ],
      "name": "setOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "setPreview",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "setPreviewTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPrivilages",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "setTokenFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setUnsafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "tokenFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "tokenFlags",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validDestination",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe6e2ae4ac034758009067d614ab6d1f800802810610b9a72a007501ad72be26f",
  "receipt": {
    "to": null,
    "from": "0xDFF917ab602e8508b6907dE1b038dd52B24A2379",
    "contractAddress": "0xA32D3A516007b0Cf7590B8169Dc9c30E3ab48cBb",
    "transactionIndex": 2,
    "gasUsed": "3141565",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2907c5a533ea72a238291b378ed7299d02f4b1a41b2970bd89228313031797d1",
    "transactionHash": "0xe6e2ae4ac034758009067d614ab6d1f800802810610b9a72a007501ad72be26f",
    "logs": [],
    "blockNumber": 4056933,
    "cumulativeGasUsed": "3670325",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d376dbecb72767ee793a0467b60033fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"addToRegisteredTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"deleteFromRegisteredTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"deleteOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"previewCount\",\"type\":\"uint256\"}],\"name\":\"deletePreview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"previewCount\",\"type\":\"uint256\"}],\"name\":\"findPreviews\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"forceTokenFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllRegisteredTokens\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getOption\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPreviewAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPreviewTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getRegisteredTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasDestinaton\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"previewTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"previews\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"option\",\"type\":\"string\"}],\"name\":\"setOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"setPreview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setPreviewTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPrivilages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"setTokenFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"tokenFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenFlags\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validDestination\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Llydia Cross\",\"details\":\"Attached to to an InfinityMint\",\"kind\":\"dev\",\"methods\":{\"addToRegisteredTokens(address,uint32)\":{\"details\":\"for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.\",\"params\":{\"owner\":\"the owner to add the token too\",\"tokenId\":\"the tokenId to add\"}},\"forceTokenFlag(uint256,string,bool)\":{\"details\":\"NOTE: This can only be called by contracts to curb rugging potential\"},\"get(uint32)\":{\"details\":\"returns an InfinityObject defined in {InfinityMintObject}\",\"params\":{\"tokenId\":\"the tokenId to get\"}},\"getAllRegisteredTokens(address)\":{\"details\":\"NOTE: This will only track 256 tokens\",\"params\":{\"owner\":\"the owner to look for\"}},\"getOwner(uint32)\":{\"params\":{\"tokenId\":\"the tokenId to get the owner of\"}},\"getRegisteredTokenCount(address)\":{\"details\":\"Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId\",\"params\":{\"owner\":\"the owner to get the length of\"}},\"setOption(address,string,string)\":{\"details\":\"this is used for instance inside of tokenURI\"}},\"title\":\"InfinityMint storage controller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToRegisteredTokens(address,uint32)\":{\"notice\":\"this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments\"},\"deleteOption(address,string)\":{\"notice\":\"deletes an option\"},\"flag(address,string)\":{\"notice\":\"returns the value of a flag\"},\"flag(uint256,string)\":{\"notice\":\"returns the value of a flag\"},\"forceTokenFlag(uint256,string,bool)\":{\"notice\":\"Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way\"},\"get(uint32)\":{\"notice\":\"returns a token\"},\"getAllRegisteredTokens(address)\":{\"notice\":\"returns an integer array containing the token ids owned by the owner address\"},\"getOption(address,string)\":{\"notice\":\"returns a global option for all the addresses tokens\"},\"getOwner(uint32)\":{\"notice\":\"returns address of the owner of this token\"},\"getPreviewTimestamp(address)\":{\"notice\":\"returns true if the address is preview blocked and unable to receive more previews\"},\"getRegisteredTokenCount(address)\":{\"notice\":\"Gets the amount of registered tokens\"},\"hasDestinaton(uint32,uint256)\":{\"notice\":\"Returns true if address in destinations array is valid, destinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token\"},\"previewTimestamp(address)\":{\"notice\":\"previews timestamps of when new previews can be made\"},\"previews(address,uint256)\":{\"notice\":\"previews\"},\"setOption(address,string,string)\":{\"notice\":\"sets an option for a users tokens\"},\"setPreviewTimestamp(address,uint256)\":{\"notice\":\"sets a time in the future they an have more previews\"},\"setUnsafe(uint32,bytes)\":{\"notice\":\"use normal set when can because of the checks it does before the set, this does no checks\"},\"tokenFlags(uint256,string)\":{\"notice\":\"a list of tokenFlags associated with the token\"},\"transfer(address,uint32)\":{\"notice\":\"Sets the owner field in the token to another value\"}},\"notice\":\"Stores the outcomes of the mint process and previews and also unlock keys\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InfinityMintStorage.sol\":\"InfinityMintStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/Authentication.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\n\\nabstract contract Authentication {\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    mapping(address => bool) public approved;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount, 're-entry');\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, 'not deployer');\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], 'not approved');\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, 'cannot modify deployer');\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multiRevoke(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = false;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n}\\n\",\"keccak256\":\"0x693bb4a4daeacc0fbb3c3102c647e82bf561e61762af18bbca7edd4f1915f222\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintObject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\n//this is implemented by every contract in our system\\nimport './InfinityMintUtil.sol';\\nimport './InfinityMintValues.sol';\\n\\nabstract contract InfinityMintObject {\\n    /// @notice The main InfinityMint object, TODO: Work out a way for this to easily be modified\\n    struct InfinityObject {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32 currentTokenId;\\n        address owner;\\n        uint32[] colours;\\n        bytes mintData;\\n        uint32[] assets;\\n        string[] names;\\n        address[] destinations;\\n    }\\n\\n    /// @notice Creates a new struct from arguments\\n    /// @dev Stickers are not set through this, structs cannot be made with sticker contracts already set and have to be set manually\\n    /// @param currentTokenId the tokenId,\\n    /// @param pathId the infinity mint paths id\\n    /// @param pathSize the size of the path (only for vectors)\\n    /// @param assets the assets which make up the token\\n    /// @param names the names of the token, its just the name but split by the splaces.\\n    /// @param colours decimal colours which will be convered to hexadecimal colours\\n    /// @param mintData variable dynamic field which is passed to ERC721 Implementor contracts and used in a lot of dynamic stuff\\n    /// @param _sender aka the owner of the token\\n    /// @param destinations a list of contracts associated with this token\\n    function createInfinityObject(\\n        uint32 currentTokenId,\\n        uint32 pathId,\\n        uint32 pathSize,\\n        uint32[] memory assets,\\n        string[] memory names,\\n        uint32[] memory colours,\\n        bytes memory mintData,\\n        address _sender,\\n        address[] memory destinations\\n    ) internal pure returns (InfinityObject memory) {\\n        return\\n            InfinityObject(\\n                pathId,\\n                pathSize,\\n                currentTokenId,\\n                _sender, //the sender aka owner\\n                colours,\\n                mintData,\\n                assets,\\n                names,\\n                destinations\\n            );\\n    }\\n\\n    /// @notice basically unpacks a return object into bytes.\\n    function encode(InfinityObject memory data)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        return\\n            abi.encode(\\n                data.pathId,\\n                data.pathSize,\\n                data.currentTokenId,\\n                data.owner,\\n                abi.encode(data.colours),\\n                data.mintData,\\n                data.assets,\\n                data.names,\\n                data.destinations\\n            );\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function sender() internal view returns (address) {\\n        return (msg.sender);\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function value() internal view returns (uint256) {\\n        return (msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0xc08cdad17c0fdf1f32e2d8540fcbf3aaa442451d030a69a6beb2b82cb6a397cd\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintStorage.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\nimport './Authentication.sol';\\n\\n/// @title InfinityMint storage controller\\n/// @author Llydia Cross\\n/// @notice Stores the outcomes of the mint process and previews and also unlock keys\\n/// @dev Attached to to an InfinityMint\\ncontract InfinityMintStorage is Authentication, InfinityMintObject {\\n    /// @notice previews\\n    mapping(address => mapping(uint256 => InfinityObject)) public previews;\\n    /// @notice previews timestamps of when new previews can be made\\n    mapping(address => uint256) public previewTimestamp;\\n    /// @notice all of the token data\\n    mapping(uint32 => InfinityObject) private tokens;\\n    /// @notice Address flags can be toggled and effect all of the tokens\\n    mapping(address => mapping(string => bool)) private flags;\\n    /// @notice a list of tokenFlags associated with the token\\n    mapping(uint256 => mapping(string => bool)) public tokenFlags;\\n    /// @notice a list of options\\n    mapping(address => mapping(string => string)) private options;\\n    /// @notice private mapping holding a list of tokens for owned by the address for quick look up\\n    mapping(address => uint32[]) private registeredTokens;\\n\\n    /// @notice returns true if the address is preview blocked and unable to receive more previews\\n    function getPreviewTimestamp(address addr) external view returns (uint256) {\\n        return previewTimestamp[addr];\\n    }\\n\\n    /// @notice sets a time in the future they an have more previews\\n    function setPreviewTimestamp(\\n        address addr,\\n        uint256 timestamp\\n    ) public onlyApproved {\\n        require(timestamp > block.timestamp, 'timestamp must be in the future');\\n        previewTimestamp[addr] = timestamp;\\n    }\\n\\n    /**\\n\\t\\t@notice Returns true if address in destinations array is valid,\\n\\t\\tdestinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token\\n\\t*/\\n    function hasDestinaton(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return\\n            tokens[tokenId].destinations.length < index &&\\n            tokens[tokenId].destinations[index] != address(0x0);\\n    }\\n\\n    /// @notice Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way\\n    /// @dev NOTE: This can only be called by contracts to curb rugging potential\\n    function forceTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        require(this.flag(tokenId, 'immutable') != true, 'token is immutable');\\n        require(\\n            !InfinityMintUtil.isEqual(bytes(_flag), 'immutable'),\\n            'token immutable/mutable state cannot be modified this way for security reasons'\\n        );\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        uint256 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    /// @notice sets an option for a users tokens\\n    /// @dev this is used for instance inside of tokenURI\\n    function setOption(\\n        address addr,\\n        string memory key,\\n        string memory option\\n    ) public onlyApproved {\\n        options[addr][key] = option;\\n    }\\n\\n    /// @notice deletes an option\\n    function deleteOption(address addr, string memory key) public onlyApproved {\\n        delete options[addr][key];\\n    }\\n\\n    /// @notice returns a global option for all the addresses tokens\\n    function getOption(\\n        address addr,\\n        string memory key\\n    ) external view returns (string memory) {\\n        return options[addr][key];\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setFlag(\\n        address addr,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        flags[addr][_flag] = position;\\n    }\\n\\n    function tokenFlag(\\n        uint32 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    function validDestination(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return (tokens[tokenId].owner != address(0x0) &&\\n            tokens[tokenId].destinations.length != 0 &&\\n            index < tokens[tokenId].destinations.length &&\\n            tokens[tokenId].destinations[index] != address(0x0));\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        address addr,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return flags[addr][_flag];\\n    }\\n\\n    /// @notice returns address of the owner of this token\\n    /// @param tokenId the tokenId to get the owner of\\n    function getOwner(uint32 tokenId) public view returns (address) {\\n        return tokens[tokenId].owner;\\n    }\\n\\n    /// @notice returns an integer array containing the token ids owned by the owner address\\n    /// @dev NOTE: This will only track 256 tokens\\n    /// @param owner the owner to look for\\n    function getAllRegisteredTokens(\\n        address owner\\n    ) public view returns (uint32[] memory) {\\n        return registeredTokens[owner];\\n    }\\n\\n    /// @notice this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments\\n    /// @dev for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.\\n    /// @param owner the owner to add the token too\\n    /// @param tokenId the tokenId to add\\n    function addToRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        //if the l\\n        if (registeredTokens[owner].length < 256)\\n            registeredTokens[owner].push(tokenId);\\n    }\\n\\n    /// @notice Gets the amount of registered tokens\\n    /// @dev Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId\\n    /// @param owner the owner to get the length of\\n    function getRegisteredTokenCount(\\n        address owner\\n    ) public view returns (uint256) {\\n        return registeredTokens[owner].length;\\n    }\\n\\n    /// @notice returns a token\\n    /// @dev returns an InfinityObject defined in {InfinityMintObject}\\n    /// @param tokenId the tokenId to get\\n    function get(uint32 tokenId) public view returns (InfinityObject memory) {\\n        if (tokens[tokenId].owner == address(0x0)) revert('invalid token');\\n\\n        return tokens[tokenId];\\n    }\\n\\n    /// @notice Sets the owner field in the token to another value\\n    function transfer(address to, uint32 tokenId) public onlyApproved {\\n        //set to new owner\\n        tokens[tokenId].owner = to;\\n    }\\n\\n    function set(\\n        uint32 tokenId,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        require(data.owner != address(0x0), 'null owner');\\n        require(data.currentTokenId == tokenId, 'tokenID mismatch');\\n        tokens[tokenId] = data;\\n    }\\n\\n    /// @notice use normal set when can because of the checks it does before the set, this does no checks\\n    function setUnsafe(uint32 tokenId, bytes memory data) public onlyApproved {\\n        tokens[tokenId] = abi.decode(data, (InfinityObject));\\n    }\\n\\n    function setPreview(\\n        address owner,\\n        uint256 index,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        previews[owner][index] = data;\\n    }\\n\\n    function getPreviewAt(\\n        address owner,\\n        uint256 index\\n    ) external view returns (InfinityObject memory) {\\n        require(\\n            previews[owner][index].owner != address(0x0),\\n            'invalid preview'\\n        );\\n\\n        return previews[owner][index];\\n    }\\n\\n    function findPreviews(\\n        address owner,\\n        uint256 previewCount\\n    ) public view onlyApproved returns (InfinityObject[] memory) {\\n        InfinityObject[] memory temp = new InfinityObject[](previewCount);\\n        for (uint256 i = 0; i < previewCount; ) {\\n            temp[i] = previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return temp;\\n    }\\n\\n    function deletePreview(\\n        address owner,\\n        uint256 previewCount\\n    ) public onlyApproved {\\n        for (uint256 i = 0; i < previewCount; ) {\\n            delete previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        delete previewTimestamp[owner];\\n    }\\n\\n    function deleteFromRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        uint256 length = registeredTokens[owner].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (registeredTokens[owner][i] == tokenId) {\\n                registeredTokens[owner][i] = registeredTokens[owner][\\n                    length - 1\\n                ];\\n                registeredTokens[owner].pop();\\n                break;\\n            }\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x058ed39a6b1db1ea5e844425bada3eb96005332c65a21b1443fef640730675c2\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintUtil.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nlibrary InfinityMintUtil {\\n    function toString(\\n        uint256 _i\\n    ) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return '0';\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function filepath(\\n        string memory directory,\\n        string memory file,\\n        string memory extension\\n    ) internal pure returns (string memory) {\\n        return string.concat(directory, file, extension);\\n    }\\n\\n    //checks if two strings (or bytes) are equal\\n    function isEqual(\\n        bytes memory s1,\\n        bytes memory s2\\n    ) internal pure returns (bool) {\\n        bytes memory b1 = bytes(s1);\\n        bytes memory b2 = bytes(s2);\\n        uint256 l1 = b1.length;\\n        if (l1 != b2.length) return false;\\n        for (uint256 i = 0; i < l1; i++) {\\n            //check each byte\\n            if (b1[i] != b2[i]) return false;\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x94f4ad0b870309e3b0f9119e8e2ed54f2914082f66a130ccae0c9fb7ff06ffb6\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintValues.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\ncontract InfinityMintValues {\\n    mapping(string => uint256) private values;\\n    mapping(string => bool) private booleanValues;\\n    mapping(string => bool) private registeredValues;\\n\\n    address deployer;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n    }\\n\\n    modifier onlyDeployer() {\\n        if (msg.sender != deployer) revert();\\n        _;\\n    }\\n\\n    function setValue(string memory key, uint256 value) public onlyDeployer {\\n        values[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function setupValues(\\n        string[] memory keys,\\n        uint256[] memory _values,\\n        string[] memory booleanKeys,\\n        bool[] memory _booleanValues\\n    ) public onlyDeployer {\\n        require(keys.length == _values.length);\\n        require(booleanKeys.length == _booleanValues.length);\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            setValue(keys[i], _values[i]);\\n        }\\n\\n        for (uint256 i = 0; i < booleanKeys.length; i++) {\\n            setBooleanValue(booleanKeys[i], _booleanValues[i]);\\n        }\\n    }\\n\\n    function setBooleanValue(string memory key, bool value)\\n        public\\n        onlyDeployer\\n    {\\n        booleanValues[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function isTrue(string memory key) external view returns (bool) {\\n        return booleanValues[key];\\n    }\\n\\n    function getValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) revert('Invalid Value');\\n\\n        return values[key];\\n    }\\n\\n    /// @dev Default value it returns is zero\\n    function tryGetValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) return 0;\\n\\n        return values[key];\\n    }\\n}\\n\",\"keccak256\":\"0x6a33f7f6d25d1da9ae406e8b4de0f569df19c91367c55bc75905d256ed8e1b24\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101bc5760003560e01c80638ff58aa6116100f55780638ff58aa6146103c15780639e4c138e146103d45780639fcc3f5e146103e7578063a22d583a146103fa578063a30f08341461040d578063a820ab9714610431578063ab732c9414610444578063c28cf06114610457578063cd40005e1461046a578063d15d4150146104a9578063d5f39488146104bc578063d8a26e3a146104cf578063d8b964e6146104ef578063db8b7da314610512578063e572596814610525578063f2fde38b1461054e578063fccc3cd514610561578063fe684c0e1461057457600080fd5b806310a8c7a9146101c15780631774bc3b146101d65780631b41c858146101e95780631f7c4d371461021157806328ab73921461022457806331ed86d214610237578063349233e61461024a5780633d7b94d6146102815780634198477e14610294578063495c94dd146102b4578063621b23e2146102d45780636407a40014610322578063699ad661146103425780636c17fd7914610355578063712a908d146103685780637e11d1c614610388578063800974841461039b5780638180a717146103ae575b600080fd5b6101d46101cf366004612955565b610587565b005b6101d46101e4366004612a09565b610627565b6101fc6101f7366004612a9b565b6106bc565b60405190151581526020015b60405180910390f35b6101fc61021f366004612a9b565b610729565b6101d4610232366004612ac7565b6107ca565b6101d4610245366004612955565b610934565b610273610258366004612b16565b6001600160a01b031660009081526009602052604090205490565b604051908152602001610208565b6101d461028f366004612b48565b6109c7565b6102736102a2366004612b16565b60046020526000908152604090205481565b6102c76102c2366004612b16565b610a52565b6040516102089190612ba2565b61030a6102e2366004612bec565b63ffffffff16600090815260056020526040902054600160601b90046001600160a01b031690565b6040516001600160a01b039091168152602001610208565b610335610330366004612c09565b610aea565b6040516102089190612e32565b6101d4610350366004612e94565b610ef5565b6101fc610363366004612ac7565b610f7a565b61037b610376366004612e94565b610fb8565b6040516102089190612eb2565b6101fc610396366004612e94565b611082565b6101d46103a9366004612ec5565b6110a8565b6101d46103bc366004612b48565b611126565b6101d46103cf366004612c09565b6112e8565b6101d46103e2366004612ec5565b6113c9565b6101d46103f5366004612ec5565b6115be565b6101d4610408366004612c09565b61167a565b61042061041b366004612c09565b611729565b604051610208959493929190612efe565b6101d461043f366004612f49565b611809565b6101d461045236600461318b565b611877565b6101d46104653660046131d9565b6119d8565b6101fc61047836600461321e565b6007602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6101fc6104b7366004612b16565b611b53565b60005461030a906001600160a01b031681565b6104e26104dd366004612bec565b611b8a565b604051610208919061324e565b6101fc6104fd366004612b16565b60026020526000908152604090205460ff1681565b6101fc61052036600461321e565b611f2a565b610273610533366004612b16565b6001600160a01b031660009081526004602052604090205490565b6101d461055c366004612b16565b611f46565b6104e261056f366004612c09565b611fe6565b6101d4610582366004613261565b612397565b6000546001600160a01b031633146105ba5760405162461bcd60e51b81526004016105b19061328f565b60405180910390fd5b80516105c557600080fd5b60005b8151811015610623576001600260008484815181106105e9576105e96132b5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105c8565b5050565b6000546001600160a01b031633148061064f57503360009081526002602052604090205460ff165b61066b5760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b0383166000908152600860205260409081902090518291906106959085906132f1565b908152602001604051809103902090805190602001906106b692919061251b565b50505050565b63ffffffff821660009081526005602081905260408220015482118015610720575063ffffffff83166000908152600560208190526040822001805484908110610708576107086132b5565b6000918252602090912001546001600160a01b031614155b90505b92915050565b63ffffffff8216600090815260056020526040812054600160601b90046001600160a01b031615801590610775575063ffffffff83166000908152600560208190526040909120015415155b8015610799575063ffffffff83166000908152600560208190526040909120015482105b8015610720575063ffffffff83166000908152600560208190526040822001805484908110610708576107086132b5565b6000546001600160a01b03163314806107f257503360009081526002602052604090205460ff165b61080e5760405162461bcd60e51b81526004016105b1906132cb565b8080602001905181019061082291906134cf565b63ffffffff80841660009081526005602090815260409182902084518154868401519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180516108bc926001850192019061259f565b5060a082015180516108d891600284019160209091019061251b565b5060c082015180516108f491600384019160209091019061259f565b5060e08201518051610910916004840191602090910190612649565b50610100820151805161092d9160058401916020909101906126a2565b5050505050565b6000546001600160a01b0316331461095e5760405162461bcd60e51b81526004016105b19061328f565b805161096957600080fd5b60005b81518110156106235760006002600084848151811061098d5761098d6132b5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161096c565b6000546001600160a01b03163314806109ef57503360009081526002602052604090205460ff165b610a0b5760405162461bcd60e51b81526004016105b1906132cb565b806007600085815260200190815260200160002083604051610a2d91906132f1565b908152604051908190036020019020805491151560ff19909216919091179055505050565b6001600160a01b038116600090815260096020908152604091829020805483518184028101840190945280845260609392830182828015610ade57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610aa15790505b50505050509050919050565b6000546060906001600160a01b0316331480610b1557503360009081526002602052604090205460ff165b610b315760405162461bcd60e51b81526004016105b1906132cb565b6000826001600160401b03811115610b4b57610b4b61282a565b604051908082528060200260200182016040528015610b8457816020015b610b716126f7565b815260200190600190039081610b695790505b50905060005b83811015610eed576001600160a01b038086166000908152600360209081526040808320858452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b9004909416606085015260018101805484518185028101850190955280855291936080860193909290830182828015610c6e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610c315790505b50505050508152602001600282018054610c8790613614565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb390613614565b8015610d005780601f10610cd557610100808354040283529160200191610d00565b820191906000526020600020905b815481529060010190602001808311610ce357829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610d8457602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d475790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e5e578382906000526020600020018054610dd190613614565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfd90613614565b8015610e4a5780601f10610e1f57610100808354040283529160200191610e4a565b820191906000526020600020905b815481529060010190602001808311610e2d57829003601f168201915b505050505081526020019060010190610db2565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ebf57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ea1575b505050505081525050828281518110610eda57610eda6132b5565b6020908102919091010152600101610b8a565b509392505050565b6000546001600160a01b0316331480610f1d57503360009081526002602052604090205460ff165b610f395760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b038216600090815260086020526040908190209051610f609083906132f1565b90815260200160405180910390206000610623919061275e565b63ffffffff82166000908152600760205260408082209051610f9d9084906132f1565b9081526040519081900360200190205460ff16905092915050565b6001600160a01b03821660009081526008602052604090819020905160609190610fe39084906132f1565b90815260200160405180910390208054610ffc90613614565b80601f016020809104026020016040519081016040528092919081815260200182805461102890613614565b80156110755780601f1061104a57610100808354040283529160200191611075565b820191906000526020600020905b81548152906001019060200180831161105857829003601f168201915b5050505050905092915050565b6001600160a01b0382166000908152600660205260408082209051610f9d9084906132f1565b6000546001600160a01b03163314806110d057503360009081526002602052604090205460ff165b6110ec5760405162461bcd60e51b81526004016105b1906132cb565b63ffffffff16600090815260056020526040902080546001600160a01b03909216600160601b026001600160601b03909216919091179055565b6000546001600160a01b031633148061114e57503360009081526002602052604090205460ff165b61116a5760405162461bcd60e51b81526004016105b1906132cb565b6040805163db8b7da360e01b81526004810185905260248101919091526009604482015268696d6d757461626c6560b81b6064820152309063db8b7da390608401602060405180830381865afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec919061364f565b1515600114156112335760405162461bcd60e51b8152602060048201526012602482015271746f6b656e20697320696d6d757461626c6560701b60448201526064016105b1565b61125e8260405180604001604052806009815260200168696d6d757461626c6560b81b815250612479565b15610a0b5760405162461bcd60e51b815260206004820152604e60248201527f746f6b656e20696d6d757461626c652f6d757461626c6520737461746520636160448201527f6e6e6f74206265206d6f64696669656420746869732077617920666f7220736560648201526d63757269747920726561736f6e7360901b608482015260a4016105b1565b6000546001600160a01b031633148061131057503360009081526002602052604090205460ff165b61132c5760405162461bcd60e51b81526004016105b1906132cb565b60005b818110156113ad576001600160a01b038316600090815260036020908152604080832084845290915281208181559061136b600183018261279b565b61137960028301600061275e565b61138760038301600061279b565b6113956004830160006127c0565b6113a36005830160006127de565b505060010161132f565b50506001600160a01b0316600090815260046020526040812055565b6000546001600160a01b03163314806113f157503360009081526002602052604090205460ff165b61140d5760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b038216600090815260096020526040812054905b818110156106b6576001600160a01b0384166000908152600960205260409020805463ffffffff8516919083908110611463576114636132b5565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614156115b6576001600160a01b03841660009081526009602052604090206114b0600184613682565b815481106114c0576114c06132b5565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660096000866001600160a01b03166001600160a01b03168152602001908152602001600020828154811061151c5761151c6132b5565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060096000856001600160a01b03166001600160a01b0316815260200190815260200160002080548061158357611583613699565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556106b6565b600101611428565b6000546001600160a01b03163314806115e657503360009081526002602052604090205460ff165b6116025760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b0382166000908152600960205260409020546101001115610623576001600160a01b03821660009081526009602090815260408220805460018101825590835291206008820401805463ffffffff80851660046007909516949094026101000a938402930219169190911790555050565b6000546001600160a01b03163314806116a257503360009081526002602052604090205460ff165b6116be5760405162461bcd60e51b81526004016105b1906132cb565b42811161170d5760405162461bcd60e51b815260206004820152601f60248201527f74696d657374616d70206d75737420626520696e20746865206675747572650060448201526064016105b1565b6001600160a01b03909116600090815260046020526040902055565b60036020908152600092835260408084209091529082529020805460028201805463ffffffff80841694600160201b8504821694600160401b810490921693600160601b9092046001600160a01b03169290919061178690613614565b80601f01602080910402602001604051908101604052809291908181526020018280546117b290613614565b80156117ff5780601f106117d4576101008083540402835291602001916117ff565b820191906000526020600020905b8154815290600101906020018083116117e257829003601f168201915b5050505050905085565b6000546001600160a01b031633148061183157503360009081526002602052604090205460ff165b61184d5760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b038316600090815260066020526040908190209051829190610a2d9085906132f1565b6000546001600160a01b031633148061189f57503360009081526002602052604090205460ff165b6118bb5760405162461bcd60e51b81526004016105b1906132cb565b6001600160a01b0380841660009081526003602090815260408083208684528252918290208451815483870151948701516060880151909616600160601b026001600160601b0363ffffffff978816600160401b02166001600160401b03968816600160201b026001600160401b0319909316979093169690961717939093169290921792909217815560808301518051849361195f92600185019291019061259f565b5060a0820151805161197b91600284019160209091019061251b565b5060c0820151805161199791600384019160209091019061259f565b5060e082015180516119b3916004840191602090910190612649565b5061010082015180516119d09160058401916020909101906126a2565b505050505050565b6000546001600160a01b0316331480611a0057503360009081526002602052604090205460ff165b611a1c5760405162461bcd60e51b81526004016105b1906132cb565b60608101516001600160a01b0316611a635760405162461bcd60e51b815260206004820152600a602482015269373ab6361037bbb732b960b11b60448201526064016105b1565b8163ffffffff16816040015163ffffffff1614611ab55760405162461bcd60e51b815260206004820152601060248201526f0e8ded6cadc928840dad2e6dac2e8c6d60831b60448201526064016105b1565b63ffffffff80831660009081526005602090815260409182902084518154838701519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180518493926108bc92600185019291019061259f565b600080546001600160a01b03838116911614806107235750506001600160a01b031660009081526002602052604090205460ff1690565b611b926126f7565b63ffffffff8216600090815260056020526040902054600160601b90046001600160a01b0316611bf45760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016105b1565b63ffffffff82811660009081526005602090815260409182902082516101208101845281548086168252600160201b8104861682850152600160401b810490951681850152600160601b9094046001600160a01b0316606085015260018101805484518185028101850190955280855291936080860193909290830182828015611cc957602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611c8c5790505b50505050508152602001600282018054611ce290613614565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0e90613614565b8015611d5b5780601f10611d3057610100808354040283529160200191611d5b565b820191906000526020600020905b815481529060010190602001808311611d3e57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611ddf57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611da25790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611eb9578382906000526020600020018054611e2c90613614565b80601f0160208091040260200160405190810160405280929190818152602001828054611e5890613614565b8015611ea55780601f10611e7a57610100808354040283529160200191611ea5565b820191906000526020600020905b815481529060010190602001808311611e8857829003601f168201915b505050505081526020019060010190611e0d565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f1a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611efc575b5050505050815250509050919050565b6000828152600760205260408082209051610f9d9084906132f1565b6000546001600160a01b03163314611f705760405162461bcd60e51b81526004016105b19061328f565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b611fee6126f7565b6001600160a01b038381166000908152600360209081526040808320868452909152902054600160601b9004166120595760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964207072657669657760881b60448201526064016105b1565b6001600160a01b038084166000908152600360209081526040808320868452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b900490941660608501526001810180548451818502810185019095528085529193608086019390929083018282801561213557602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116120f85790505b5050505050815260200160028201805461214e90613614565b80601f016020809104026020016040519081016040528092919081815260200182805461217a90613614565b80156121c75780601f1061219c576101008083540402835291602001916121c7565b820191906000526020600020905b8154815290600101906020018083116121aa57829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561224b57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161220e5790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561232557838290600052602060002001805461229890613614565b80601f01602080910402602001604051908101604052809291908181526020018280546122c490613614565b80156123115780601f106122e657610100808354040283529160200191612311565b820191906000526020600020905b8154815290600101906020018083116122f457829003601f168201915b505050505081526020019060010190612279565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561238657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612368575b505050505081525050905092915050565b6000546001600160a01b031633146123c15760405162461bcd60e51b81526004016105b19061328f565b6000546001600160a01b03838116911614156124185760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016105b1565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b81518151600091849184919081146124975760009350505050610723565b60005b8181101561250e578281815181106124b4576124b46132b5565b602001015160f81c60f81b6001600160f81b0319168482815181106124db576124db6132b5565b01602001516001600160f81b031916146124fc576000945050505050610723565b80612506816136af565b91505061249a565b5060019695505050505050565b82805461252790613614565b90600052602060002090601f016020900481019282612549576000855561258f565b82601f1061256257805160ff191683800117855561258f565b8280016001018555821561258f579182015b8281111561258f578251825591602001919060010190612574565b5061259b9291506127f8565b5090565b8280548282559060005260206000209060070160089004810192821561258f5791602002820160005b8382111561260c57835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026125c8565b801561263c5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261260c565b505061259b9291506127f8565b828054828255906000526020600020908101928215612696579160200282015b82811115612696578251805161268691849160209091019061251b565b5091602001919060010190612669565b5061259b92915061280d565b82805482825590600052602060002090810192821561258f579160200282015b8281111561258f57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906126c2565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b50805461276a90613614565b6000825580601f1061277a575050565b601f01602090049060005260206000209081019061279891906127f8565b50565b50805460008255600701600890049060005260206000209081019061279891906127f8565b5080546000825590600052602060002090810190612798919061280d565b508054600082559060005260206000209081019061279891905b5b8082111561259b57600081556001016127f9565b8082111561259b576000612821828261275e565b5060010161280d565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156128635761286361282a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156128915761289161282a565b604052919050565b60006001600160401b038211156128b2576128b261282a565b5060051b60200190565b6001600160a01b038116811461279857600080fd5b80356128dc816128bc565b919050565b600082601f8301126128f257600080fd5b8135602061290761290283612899565b612869565b82815260059290921b8401810191818101908684111561292657600080fd5b8286015b8481101561294a57803561293d816128bc565b835291830191830161292a565b509695505050505050565b60006020828403121561296757600080fd5b81356001600160401b0381111561297d57600080fd5b612989848285016128e1565b949350505050565b60006001600160401b038211156129aa576129aa61282a565b50601f01601f191660200190565b600082601f8301126129c957600080fd5b81356129d761290282612991565b8181528460208386010111156129ec57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612a1e57600080fd5b8335612a29816128bc565b925060208401356001600160401b0380821115612a4557600080fd5b612a51878388016129b8565b93506040860135915080821115612a6757600080fd5b50612a74868287016129b8565b9150509250925092565b63ffffffff8116811461279857600080fd5b80356128dc81612a7e565b60008060408385031215612aae57600080fd5b8235612ab981612a7e565b946020939093013593505050565b60008060408385031215612ada57600080fd5b8235612ae581612a7e565b915060208301356001600160401b03811115612b0057600080fd5b612b0c858286016129b8565b9150509250929050565b600060208284031215612b2857600080fd5b8135612b33816128bc565b9392505050565b801515811461279857600080fd5b600080600060608486031215612b5d57600080fd5b8335925060208401356001600160401b03811115612b7a57600080fd5b612b86868287016129b8565b9250506040840135612b9781612b3a565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612be057835163ffffffff1683529284019291840191600101612bbe565b50909695505050505050565b600060208284031215612bfe57600080fd5b8135612b3381612a7e565b60008060408385031215612c1c57600080fd5b8235612ab9816128bc565b600081518084526020808501945080840160005b83811015612c5d57815163ffffffff1687529582019590820190600101612c3b565b509495945050505050565b60005b83811015612c83578181015183820152602001612c6b565b838111156106b65750506000910152565b60008151808452612cac816020860160208601612c68565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612d08578284038952612cf6848351612c94565b98850198935090840190600101612cde565b5091979650505050505050565b600081518084526020808501945080840160005b83811015612c5d5781516001600160a01b031687529582019590820190600101612d29565b805163ffffffff16825260006101206020830151612d74602086018263ffffffff169052565b506040830151612d8c604086018263ffffffff169052565b506060830151612da760608601826001600160a01b03169052565b506080830151816080860152612dbf82860182612c27565b91505060a083015184820360a0860152612dd98282612c94565b91505060c083015184820360c0860152612df38282612c27565b91505060e083015184820360e0860152612e0d8282612cc0565b9150506101008084015185830382870152612e288382612d15565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612e8757603f19888603018452612e75858351612d4e565b94509285019290850190600101612e59565b5092979650505050505050565b60008060408385031215612ea757600080fd5b8235612ae5816128bc565b6020815260006107206020830184612c94565b60008060408385031215612ed857600080fd5b8235612ee3816128bc565b91506020830135612ef381612a7e565b809150509250929050565b63ffffffff86811682528581166020830152841660408201526001600160a01b038316606082015260a060808201819052600090612f3e90830184612c94565b979650505050505050565b600080600060608486031215612f5e57600080fd5b8335612f69816128bc565b925060208401356001600160401b03811115612b7a57600080fd5b600082601f830112612f9557600080fd5b81356020612fa561290283612899565b82815260059290921b84018101918181019086841115612fc457600080fd5b8286015b8481101561294a578035612fdb81612a7e565b8352918301918301612fc8565b600082601f830112612ff957600080fd5b8135602061300961290283612899565b82815260059290921b8401810191818101908684111561302857600080fd5b8286015b8481101561294a5780356001600160401b0381111561304b5760008081fd5b6130598986838b01016129b8565b84525091830191830161302c565b6000610120828403121561307a57600080fd5b613082612840565b905061308d82612a90565b815261309b60208301612a90565b60208201526130ac60408301612a90565b60408201526130bd606083016128d1565b606082015260808201356001600160401b03808211156130dc57600080fd5b6130e885838601612f84565b608084015260a084013591508082111561310157600080fd5b61310d858386016129b8565b60a084015260c084013591508082111561312657600080fd5b61313285838601612f84565b60c084015260e084013591508082111561314b57600080fd5b61315785838601612fe8565b60e08401526101009150818401358181111561317257600080fd5b61317e868287016128e1565b8385015250505092915050565b6000806000606084860312156131a057600080fd5b83356131ab816128bc565b92506020840135915060408401356001600160401b038111156131cd57600080fd5b612a7486828701613067565b600080604083850312156131ec57600080fd5b82356131f781612a7e565b915060208301356001600160401b0381111561321257600080fd5b612b0c85828601613067565b6000806040838503121561323157600080fd5b8235915060208301356001600160401b03811115612b0057600080fd5b6020815260006107206020830184612d4e565b6000806040838503121561327457600080fd5b823561327f816128bc565b91506020830135612ef381612b3a565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b60008251613303818460208701612c68565b9190910192915050565b80516128dc81612a7e565b80516128dc816128bc565b600082601f83011261333457600080fd5b8151602061334461290283612899565b82815260059290921b8401810191818101908684111561336357600080fd5b8286015b8481101561294a57805161337a81612a7e565b8352918301918301613367565b600061339561290284612991565b90508281528383830111156133a957600080fd5b612b33836020830184612c68565b600082601f8301126133c857600080fd5b61072083835160208501613387565b600082601f8301126133e857600080fd5b815160206133f861290283612899565b82815260059290921b8401810191818101908684111561341757600080fd5b8286015b8481101561294a5780516001600160401b0381111561343a5760008081fd5b8701603f8101891361344c5760008081fd5b61345d898683015160408401613387565b84525091830191830161341b565b600082601f83011261347c57600080fd5b8151602061348c61290283612899565b82815260059290921b840181019181810190868411156134ab57600080fd5b8286015b8481101561294a5780516134c2816128bc565b83529183019183016134af565b6000602082840312156134e157600080fd5b81516001600160401b03808211156134f857600080fd5b90830190610120828603121561350d57600080fd5b613515612840565b61351e8361330d565b815261352c6020840161330d565b602082015261353d6040840161330d565b604082015261354e60608401613318565b606082015260808301518281111561356557600080fd5b61357187828601613323565b60808301525060a08301518281111561358957600080fd5b613595878286016133b7565b60a08301525060c0830151828111156135ad57600080fd5b6135b987828601613323565b60c08301525060e0830151828111156135d157600080fd5b6135dd878286016133d7565b60e08301525061010080840151838111156135f757600080fd5b6136038882870161346b565b918301919091525095945050505050565b600181811c9082168061362857607f821691505b6020821081141561364957634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561366157600080fd5b8151612b3381612b3a565b634e487b7160e01b600052601160045260246000fd5b6000828210156136945761369461366c565b500390565b634e487b7160e01b600052603160045260246000fd5b60006000198214156136c3576136c361366c565b506001019056fea264697066735822122051a027abe093bd6b8e267b1018fbef350dc16fc39c2dfc8561daf5fb176c543564736f6c634300080c0033",
  "libraries": {
    "InfinityMintUtil": "0xe2A4755A9b489Fe957FCa6d8DD3Edb170a31921d"
  },
  "devdoc": {
    "author": "Llydia Cross",
    "details": "Attached to to an InfinityMint",
    "kind": "dev",
    "methods": {
      "addToRegisteredTokens(address,uint32)": {
        "details": "for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.",
        "params": {
          "owner": "the owner to add the token too",
          "tokenId": "the tokenId to add"
        }
      },
      "forceTokenFlag(uint256,string,bool)": {
        "details": "NOTE: This can only be called by contracts to curb rugging potential"
      },
      "get(uint32)": {
        "details": "returns an InfinityObject defined in {InfinityMintObject}",
        "params": {
          "tokenId": "the tokenId to get"
        }
      },
      "getAllRegisteredTokens(address)": {
        "details": "NOTE: This will only track 256 tokens",
        "params": {
          "owner": "the owner to look for"
        }
      },
      "getOwner(uint32)": {
        "params": {
          "tokenId": "the tokenId to get the owner of"
        }
      },
      "getRegisteredTokenCount(address)": {
        "details": "Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId",
        "params": {
          "owner": "the owner to get the length of"
        }
      },
      "setOption(address,string,string)": {
        "details": "this is used for instance inside of tokenURI"
      }
    },
    "title": "InfinityMint storage controller",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToRegisteredTokens(address,uint32)": {
        "notice": "this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments"
      },
      "deleteOption(address,string)": {
        "notice": "deletes an option"
      },
      "flag(address,string)": {
        "notice": "returns the value of a flag"
      },
      "flag(uint256,string)": {
        "notice": "returns the value of a flag"
      },
      "forceTokenFlag(uint256,string,bool)": {
        "notice": "Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way"
      },
      "get(uint32)": {
        "notice": "returns a token"
      },
      "getAllRegisteredTokens(address)": {
        "notice": "returns an integer array containing the token ids owned by the owner address"
      },
      "getOption(address,string)": {
        "notice": "returns a global option for all the addresses tokens"
      },
      "getOwner(uint32)": {
        "notice": "returns address of the owner of this token"
      },
      "getPreviewTimestamp(address)": {
        "notice": "returns true if the address is preview blocked and unable to receive more previews"
      },
      "getRegisteredTokenCount(address)": {
        "notice": "Gets the amount of registered tokens"
      },
      "hasDestinaton(uint32,uint256)": {
        "notice": "Returns true if address in destinations array is valid, destinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token"
      },
      "previewTimestamp(address)": {
        "notice": "previews timestamps of when new previews can be made"
      },
      "previews(address,uint256)": {
        "notice": "previews"
      },
      "setOption(address,string,string)": {
        "notice": "sets an option for a users tokens"
      },
      "setPreviewTimestamp(address,uint256)": {
        "notice": "sets a time in the future they an have more previews"
      },
      "setUnsafe(uint32,bytes)": {
        "notice": "use normal set when can because of the checks it does before the set, this does no checks"
      },
      "tokenFlags(uint256,string)": {
        "notice": "a list of tokenFlags associated with the token"
      },
      "transfer(address,uint32)": {
        "notice": "Sets the owner field in the token to another value"
      }
    },
    "notice": "Stores the outcomes of the mint process and previews and also unlock keys",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 458,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 461,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "executionCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 465,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "approved",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5966,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "previews",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(InfinityObject)5562_storage))"
      },
      {
        "astId": 5971,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "previewTimestamp",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5977,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "tokens",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint32,t_struct(InfinityObject)5562_storage)"
      },
      {
        "astId": 5984,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "flags",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 5991,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "tokenFlags",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 5998,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "options",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))"
      },
      {
        "astId": 6004,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "registeredTokens",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint32)dyn_storage": {
        "base": "t_uint32",
        "encoding": "dynamic_array",
        "label": "uint32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint32)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(InfinityObject)5562_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct InfinityMintObject.InfinityObject))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(InfinityObject)5562_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(InfinityObject)5562_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct InfinityMintObject.InfinityObject)",
        "numberOfBytes": "32",
        "value": "t_struct(InfinityObject)5562_storage"
      },
      "t_mapping(t_uint32,t_struct(InfinityObject)5562_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct InfinityMintObject.InfinityObject)",
        "numberOfBytes": "32",
        "value": "t_struct(InfinityObject)5562_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(InfinityObject)5562_storage": {
        "encoding": "inplace",
        "label": "struct InfinityMintObject.InfinityObject",
        "members": [
          {
            "astId": 5541,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "pathId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5543,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "pathSize",
            "offset": 4,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5545,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "currentTokenId",
            "offset": 8,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5547,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "owner",
            "offset": 12,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5550,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "colours",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 5552,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "mintData",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 5555,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "assets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 5558,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "names",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 5561,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "destinations",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}