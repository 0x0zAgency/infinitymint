{
  "address": "0x48e7B428bF0aCa96b578aC181fA5fE1b17bc3E1E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc721Destination",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "PermissionChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "RequestApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "RequestRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RequestSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "redemption",
          "type": "bytes"
        }
      ],
      "name": "addRedemption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "redemptions",
          "type": "bytes[]"
        }
      ],
      "name": "addRedemptions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "redemption",
          "type": "bytes"
        }
      ],
      "name": "approveRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveRedemption",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getChecks",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "bools",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyRequestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRedemptionProof",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct Mod_Redemption.SuccessfulRedemption",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "redemption",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "internalType": "struct Mod_Redemption.Request",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getRequestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRequestOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "hasRedeemed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "hasRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isRedeemable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "makeUnredeemable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rejectRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "redemption",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "theirKey",
          "type": "bytes"
        }
      ],
      "name": "requestToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPrivilages",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setWalletBlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x204f246f102c7b211df2d53d0b2bf46f7c7e511f03a5507e80f1fcf61b59e8d4",
  "receipt": {
    "to": null,
    "from": "0xDFF917ab602e8508b6907dE1b038dd52B24A2379",
    "contractAddress": "0x48e7B428bF0aCa96b578aC181fA5fE1b17bc3E1E",
    "transactionIndex": 2,
    "gasUsed": "2172212",
    "logsBloom": "0x
    "blockHash": "0x36b9520fa672870d7dede84259df58ae1020c422a80d2c802486ec7fd769abae",
    "transactionHash": "0x204f246f102c7b211df2d53d0b2bf46f7c7e511f03a5507e80f1fcf61b59e8d4",
    "logs": [],
    "blockNumber": 4056963,
    "cumulativeGasUsed": "2508530",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x34dc015eC06596218C951B2CB3CE7D3Cf0cA9DA1"
  ],
  "numDeployments": 1,
  "solcInputHash": "d376dbecb72767ee793a0467b60033fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc721Destination\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"RequestApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"RequestRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RequestSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"redemption\",\"type\":\"bytes\"}],\"name\":\"addRedemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"redemptions\",\"type\":\"bytes[]\"}],\"name\":\"addRedemptions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"redemption\",\"type\":\"bytes\"}],\"name\":\"approveRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveRedemption\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getChecks\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"bools\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyRequestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRedemptionProof\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct Mod_Redemption.SuccessfulRedemption\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"redemption\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"internalType\":\"struct Mod_Redemption.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRequestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRequestOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasRedeemed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isRedeemable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"makeUnredeemable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rejectRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"redemption\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"theirKey\",\"type\":\"bytes\"}],\"name\":\"requestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPrivilages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setWalletBlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveRedeem(uint256,bytes)\":{\"notice\":\"Approves a request to redeem a token\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Allows this redemption contract to receive ERC721 from approved addresses only\"},\"rejectRedeem(uint256)\":{\"notice\":\"Rejects a request to redeem a token\"},\"requestToken(uint256,bytes,bytes)\":{\"notice\":\"Requests a token to be transfered to the sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/__mods/Redemption.sol\":\"Mod_Redemption\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/__mods/Redemption.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport 'infinitymint/alpha/Authentication.sol';\\nimport 'infinitymint/alpha/IERC721.sol';\\n\\ncontract Mod_Redemption is IERC721Receiver, Authentication, InfinityMintObject {\\n    IERC721 erc721;\\n\\n    mapping(uint256 => bytes) private activeRedemptions;\\n    mapping(uint256 => Request) private requests;\\n    mapping(uint256 => SuccessfulRedemption) private successfulRedemptions;\\n    mapping(address => uint256) private requestCount;\\n    mapping(address => bool) private blockedWallets;\\n\\n    struct Request {\\n        address sender;\\n        bytes redemption;\\n        bytes key;\\n        bool valid;\\n    }\\n\\n    struct SuccessfulRedemption {\\n        address receiver;\\n        address admin;\\n        uint256 time;\\n        uint256 tokenId;\\n        bool valid;\\n    }\\n\\n    event RequestSubmitted(uint256 tokenId, address indexed sender);\\n    event RequestApproved(\\n        uint256 tokenId,\\n        address indexed sender,\\n        address admin\\n    );\\n    event RequestRejected(\\n        uint256 tokenId,\\n        address indexed sender,\\n        address admin\\n    );\\n\\n    constructor(address erc721Destination) {\\n        erc721 = IERC721(erc721Destination);\\n    }\\n\\n    function getRequestOwner(uint256 tokenId) public view returns (address) {\\n        if (requests[tokenId].valid == false) return address(0x0);\\n        return requests[tokenId].sender;\\n    }\\n\\n    function getRequest(uint256 tokenId) public view returns (Request memory) {\\n        require(\\n            approved[sender()] ||\\n                deployer == sender() ||\\n                getRequestOwner(tokenId) == sender(),\\n            'invalid permissions'\\n        );\\n        return requests[tokenId];\\n    }\\n\\n    function getActiveRedemption(uint256 tokenId)\\n        public\\n        view\\n        onlyApproved\\n        returns (bytes memory)\\n    {\\n        return activeRedemptions[tokenId];\\n    }\\n\\n    function setWalletBlocked(address addr, bool value) public onlyApproved {\\n        blockedWallets[addr] = value;\\n    }\\n\\n    function hasRequest(uint256 tokenId) public view returns (bool) {\\n        return requests[tokenId].valid == true;\\n    }\\n\\n    function getRequestCount(address addr)\\n        external\\n        view\\n        onlyApproved\\n        returns (uint256)\\n    {\\n        return requestCount[addr];\\n    }\\n\\n    function getChecks(uint256 tokenId)\\n        external\\n        view\\n        returns (bool[] memory bools)\\n    {\\n        bools = new bool[](3);\\n        bools[0] = this.isRedeemable(tokenId);\\n        bools[1] = hasRedeemed(tokenId);\\n        bools[2] = hasRequest(tokenId);\\n    }\\n\\n    function getMyRequestCount() external view returns (uint256) {\\n        require(sender() != address(0x0));\\n        return requestCount[sender()];\\n    }\\n\\n    function isRedeemable(uint256 tokenId) external view returns (bool) {\\n        return bytes(activeRedemptions[tokenId]).length != 0;\\n    }\\n\\n    function hasRedeemed(uint256 tokenId) public view returns (bool) {\\n        return successfulRedemptions[tokenId].valid;\\n    }\\n\\n    function getRedemptionProof(uint256 tokenId)\\n        external\\n        view\\n        returns (SuccessfulRedemption memory)\\n    {\\n        require(hasRedeemed(tokenId), 'has not been redeemed');\\n        require(\\n            sender() == successfulRedemptions[tokenId].receiver ||\\n                approved[sender()] ||\\n                deployer == sender()\\n        );\\n        return successfulRedemptions[tokenId];\\n    }\\n\\n    function makeUnredeemable(uint256 tokenId) public {\\n        require(\\n            bytes(activeRedemptions[tokenId]).length != 0,\\n            'must be redeemable'\\n        );\\n        require(\\n            successfulRedemptions[tokenId].valid == false,\\n            'already redeemed cannot change'\\n        );\\n\\n        delete activeRedemptions[tokenId];\\n    }\\n\\n    /// @notice Allows this redemption contract to receive ERC721 from approved addresses only\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external view onlyApproved returns (bytes4) {\\n        return IERC721Receiver.onERC721Received.selector;\\n    }\\n\\n    /// @notice Rejects a request to redeem a token\\n    function rejectRedeem(uint256 tokenId) public onlyApproved {\\n        require(requests[tokenId].valid, 'invalid request');\\n        require(\\n            bytes(activeRedemptions[tokenId]).length != 0,\\n            'invalid redemption token id'\\n        );\\n\\n        address tempSender = (requests[tokenId].sender);\\n        if (requestCount[tempSender] > 0)\\n            requestCount[tempSender] = requestCount[tempSender] - 1;\\n\\n        delete requests[tokenId];\\n        emit RequestRejected(tokenId, tempSender, sender());\\n    }\\n\\n    /// @notice Approves a request to redeem a token\\n    function approveRedeem(uint256 tokenId, bytes memory redemption)\\n        public\\n        onlyApproved\\n        onlyOnce\\n    {\\n        //is valid request\\n        require(requests[tokenId].valid, 'invalid request');\\n        //active redemption valid\\n        require(\\n            bytes(activeRedemptions[tokenId]).length != 0,\\n            'invalid redemption token id'\\n        );\\n        //has already been redeemed\\n        require(\\n            successfulRedemptions[tokenId].valid == false,\\n            'token has already been redeemed'\\n        );\\n        //check that the passcode is equal to the activeRedemptions passcode.\\n        require(\\n            InfinityMintUtil.isEqual(redemption, activeRedemptions[tokenId]),\\n            'check failed'\\n        );\\n        Request memory tempRequest = requests[tokenId];\\n        delete requests[tokenId];\\n\\n        //write to storage\\n        successfulRedemptions[tokenId] = SuccessfulRedemption(\\n            tempRequest.sender,\\n            sender(),\\n            block.timestamp,\\n            tokenId,\\n            true\\n        );\\n\\n        //deduct from request count\\n        if (requestCount[requests[tokenId].sender] > 0)\\n            requestCount[tempRequest.sender] =\\n                requestCount[tempRequest.sender] -\\n                1;\\n        //transfer the token from this contract to the sender\\n        erc721.safeTransferFrom(address(this), tempRequest.sender, tokenId);\\n        emit RequestApproved(tokenId, tempRequest.sender, sender());\\n    }\\n\\n    /// @notice Requests a token to be transfered to the sender\\n    function requestToken(\\n        uint256 tokenId,\\n        bytes memory redemption,\\n        bytes memory theirKey\\n    ) public {\\n        require(!isContract(sender()), 'cannot be invoked by contract');\\n        require(\\n            !blockedWallets[sender()],\\n            'cannot redeem a token at this time'\\n        );\\n        require(\\n            requestCount[sender()] <= 3,\\n            'you have too many requests open at this time'\\n        );\\n        require(\\n            successfulRedemptions[tokenId].valid == false,\\n            'token has already been redeemed'\\n        );\\n        require(\\n            bytes(activeRedemptions[tokenId]).length != 0,\\n            'invalid redemption token id'\\n        );\\n        require(\\n            requests[tokenId].valid == false,\\n            'request already open for this token'\\n        );\\n\\n        require(\\n            InfinityMintUtil.isEqual(redemption, activeRedemptions[tokenId]),\\n            'validation failed'\\n        );\\n\\n        requests[tokenId] = Request(sender(), redemption, theirKey, true);\\n        requestCount[sender()] = requestCount[sender()] + 1;\\n        emit RequestSubmitted(tokenId, sender());\\n    }\\n\\n    function addRedemption(uint256 tokenId, bytes memory redemption)\\n        public\\n        onlyApproved\\n    {\\n        require(bytes(activeRedemptions[tokenId]).length == 0, 'already set');\\n        require(\\n            erc721.ownerOf(tokenId) == address(this),\\n            'please transfer the token to this contract first'\\n        );\\n\\n        activeRedemptions[tokenId] = redemption;\\n    }\\n\\n    function addRedemptions(\\n        uint256[] memory _tokenIds,\\n        bytes[] memory redemptions\\n    ) public onlyApproved {\\n        require(_tokenIds.length == redemptions.length, 'mismatch');\\n\\n        for (uint256 i = 0; i < redemptions.length; ) {\\n            uint256 tokenId = _tokenIds[i];\\n            activeRedemptions[tokenId] = redemptions[i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    ///@notice Returns true if the address is a contract\\n    ///@dev Sometimes doesnt work and contracts might be disgused as addresses\\n    function isContract(address _address) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(_address)\\n        }\\n        return size > 0;\\n    }\\n}\\n\",\"keccak256\":\"0xb144daa6647e05da517d47db74b572ed03fd0ff8646bdfa25b3aa5394420a07c\",\"license\":\"UNLICENSED\"},\"infinitymint/alpha/Authentication.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\n\\nabstract contract Authentication {\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    mapping(address => bool) public approved;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount, 're-entry');\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, 'not deployer');\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], 'not approved');\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, 'cannot modify deployer');\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multiRevoke(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = false;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n}\\n\",\"keccak256\":\"0x693bb4a4daeacc0fbb3c3102c647e82bf561e61762af18bbca7edd4f1915f222\",\"license\":\"UNLICENSED\"},\"infinitymint/alpha/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"infinitymint/alpha/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol) (Thanks <3)\\n\\npragma solidity ^0.8.0;\\n\\nimport './IERC165.sol';\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\\n/// @title ERC-721 Non-Fungible Token Standard, ERC721 Receiver\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\\ninterface IERC721Metadata is IERC721 {\\n    /// @notice A descriptive name for a collection of NFTs in this contract\\n    function name() external view returns (string memory _name);\\n\\n    /// @notice An abbreviated name for NFTs in this contract\\n    function symbol() external view returns (string memory _symbol);\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n    /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\\n    ///  3986. The URI may point to a JSON file that conforms to the \\\"ERC721\\n    ///  Metadata JSON Schema\\\".\\n    function tokenURI(uint256 _tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd8b8d9bdde5c2b3b66dba994c1701cb11e1940a9164d059b6189ae6dcab83fbc\",\"license\":\"MIT\"},\"infinitymint/alpha/InfinityMintObject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\n//this is implemented by every contract in our system\\nimport './InfinityMintUtil.sol';\\nimport './InfinityMintValues.sol';\\n\\nabstract contract InfinityMintObject {\\n    /// @notice The main InfinityMint object, TODO: Work out a way for this to easily be modified\\n    struct InfinityObject {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32 currentTokenId;\\n        address owner;\\n        uint32[] colours;\\n        bytes mintData;\\n        uint32[] assets;\\n        string[] names;\\n        address[] destinations;\\n    }\\n\\n    /// @notice Creates a new struct from arguments\\n    /// @dev Stickers are not set through this, structs cannot be made with sticker contracts already set and have to be set manually\\n    /// @param currentTokenId the tokenId,\\n    /// @param pathId the infinity mint paths id\\n    /// @param pathSize the size of the path (only for vectors)\\n    /// @param assets the assets which make up the token\\n    /// @param names the names of the token, its just the name but split by the splaces.\\n    /// @param colours decimal colours which will be convered to hexadecimal colours\\n    /// @param mintData variable dynamic field which is passed to ERC721 Implementor contracts and used in a lot of dynamic stuff\\n    /// @param _sender aka the owner of the token\\n    /// @param destinations a list of contracts associated with this token\\n    function create(\\n        uint32 currentTokenId,\\n        uint32 pathId,\\n        uint32 pathSize,\\n        uint32[] memory assets,\\n        string[] memory names,\\n        uint32[] memory colours,\\n        bytes memory mintData,\\n        address _sender,\\n        address[] memory destinations\\n    ) internal pure returns (InfinityObject memory) {\\n        return\\n            InfinityObject(\\n                pathId,\\n                pathSize,\\n                currentTokenId,\\n                _sender, //the sender aka owner\\n                colours,\\n                mintData,\\n                assets,\\n                names,\\n                destinations\\n            );\\n    }\\n\\n    /// @notice basically unpacks a return object into bytes.\\n    function encode(\\n        InfinityObject memory data\\n    ) internal pure returns (bytes memory) {\\n        return\\n            abi.encode(\\n                data.pathId,\\n                data.pathSize,\\n                data.currentTokenId,\\n                data.owner,\\n                abi.encode(data.colours),\\n                data.mintData,\\n                data.assets,\\n                data.names,\\n                data.destinations\\n            );\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function sender() internal view returns (address) {\\n        return (msg.sender);\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function value() internal view returns (uint256) {\\n        return (msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0xfc306511e52261677d5a153f0e35e2a1219dac67acd294022e25d3e16236f222\",\"license\":\"UNLICENSED\"},\"infinitymint/alpha/InfinityMintUtil.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\nlibrary InfinityMintUtil {\\n    function toString(\\n        uint256 _i\\n    ) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return '0';\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    //checks if two strings (or bytes) are equal\\n    function isEqual(\\n        bytes memory s1,\\n        bytes memory s2\\n    ) internal pure returns (bool) {\\n        bytes memory b1 = bytes(s1);\\n        bytes memory b2 = bytes(s2);\\n        uint256 l1 = b1.length;\\n        if (l1 != b2.length) return false;\\n        for (uint256 i = 0; i < l1; i++) {\\n            //check each byte\\n            if (b1[i] != b2[i]) return false;\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xe058e9cd6f5a86eebee0d332f51405b93f4ab03c3dbac93b9c71a006352cd05c\",\"license\":\"UNLICENSED\"},\"infinitymint/alpha/InfinityMintValues.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//llydia cross 2021\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title InfinityMintValues\\n * @dev This contract is used to store values that are used by the InfinityMint contract.\\n * It is used to store the values that are used by the InfinityMint contract.\\n */\\ncontract InfinityMintValues {\\n    mapping(string => uint256) private values;\\n    mapping(string => bool) private booleanValues;\\n    mapping(string => bool) private registeredValues;\\n    mapping(address => bool) public approved;\\n\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount, 're-entry');\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, 'not deployer');\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], 'not approved');\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, 'cannot modify deployer');\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multiRevoke(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = false;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n\\n    function setValue(string memory key, uint256 value) public onlyDeployer {\\n        values[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function setupValues(\\n        string[] memory keys,\\n        uint256[] memory _values,\\n        string[] memory booleanKeys,\\n        bool[] memory _booleanValues\\n    ) public onlyDeployer {\\n        require(keys.length == _values.length);\\n        require(booleanKeys.length == _booleanValues.length);\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            setValue(keys[i], _values[i]);\\n        }\\n\\n        for (uint256 i = 0; i < booleanKeys.length; i++) {\\n            setBooleanValue(booleanKeys[i], _booleanValues[i]);\\n        }\\n    }\\n\\n    function setBooleanValue(\\n        string memory key,\\n        bool value\\n    ) public onlyDeployer {\\n        booleanValues[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function isTrue(string memory key) external view returns (bool) {\\n        return booleanValues[key];\\n    }\\n\\n    function getValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) revert('Invalid Value');\\n\\n        return values[key];\\n    }\\n\\n    /// @dev Default value it returns is zero\\n    function tryGetValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) return 0;\\n\\n        return values[key];\\n    }\\n}\\n\",\"keccak256\":\"0x4ef0b45aa5dfaae5206de8e1aea2d005bd887465face4dbec7438806a40d2743\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101335760003560e01c806310a8c7a914610138578063150b7a021461014d57806326f72ec81461017e57806331ed86d2146101de57806353565824146101f157806372c94b5c146102045780637918d3fe146102175780637cc9c1ac146102375780637e9cbd3b1461024a57806382adf9c51461025d5780638474a7e1146102705780638611cb671461029057806394b591af146102bb578063a7771ea5146102ce578063ada49963146102f1578063b904c3ba14610312578063c58343ef14610325578063cf7a53a114610345578063d15d41501461034d578063d5f3948814610360578063d8b964e614610373578063e2ad3eb014610396578063f2fde38b146103a9578063f48cc326146103bc578063fe684c0e146103cf575b600080fd5b61014b610146366004611dc9565b6103e2565b005b61016061015b366004611e67565b610482565b6040516001600160e01b031990911681526020015b60405180910390f35b61019161018c366004611f05565b6104d9565b604051610175919081516001600160a01b03908116825260208084015190911690820152604080830151908201526060808301519082015260809182015115159181019190915260a00190565b61014b6101ec366004611dc9565b61060c565b61014b6101ff366004611f05565b61069f565b61014b610212366004611f8d565b610843565b61022a610225366004611f05565b610dae565b6040516101759190611fd3565b61014b610245366004612019565b610eb1565b61014b610258366004611f8d565b61122b565b61014b61026b366004611f05565b6113c0565b61028361027e366004611f05565b61149a565b60405161017591906120d2565b6102a361029e366004611f05565b61157f565b6040516001600160a01b039091168152602001610175565b61014b6102c9366004612176565b6115bc565b6102e16102dc366004611f05565b6116b0565b6040519015158152602001610175565b6103046102ff366004612224565b6116c8565b604051908152602001610175565b6102e1610320366004611f05565b611729565b610338610333366004611f05565b611746565b6040516101759190612241565b610304611968565b6102e161035b366004612224565b611988565b6000546102a3906001600160a01b031681565b6102e1610381366004612224565b60026020526000908152604090205460ff1681565b61014b6103a43660046122b3565b6119c3565b61014b6103b7366004612224565b611a32565b6102e16103ca366004611f05565b611ad2565b61014b6103dd3660046122b3565b611af4565b6000546001600160a01b031633146104155760405162461bcd60e51b815260040161040c906122ec565b60405180910390fd5b805161042057600080fd5b60005b815181101561047e5760016002600084848151811061044457610444612312565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610423565b5050565b600080546001600160a01b03163314806104ab57503360009081526002602052604090205460ff165b6104c75760405162461bcd60e51b815260040161040c90612328565b50630a85bd0160e11b95945050505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261050d826116b0565b6105515760405162461bcd60e51b81526020600482015260156024820152741a185cc81b9bdd081899595b881c995919595b5959605a1b604482015260640161040c565b6000828152600660205260409020546001600160a01b0316336001600160a01b0316148061058e57503360009081526002602052604090205460ff165b806105a357506000546001600160a01b031633145b6105ac57600080fd5b50600090815260066020908152604091829020825160a08101845281546001600160a01b039081168252600183015416928101929092526002810154928201929092526003820154606082015260049091015460ff161515608082015290565b6000546001600160a01b031633146106365760405162461bcd60e51b815260040161040c906122ec565b805161064157600080fd5b60005b815181101561047e5760006002600084848151811061066557610665612312565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610644565b6000546001600160a01b03163314806106c757503360009081526002602052604090205460ff165b6106e35760405162461bcd60e51b815260040161040c90612328565b60008181526005602052604090206003015460ff166107145760405162461bcd60e51b815260040161040c9061234e565b6000818152600460205260409020805461072d90612377565b1515905061074d5760405162461bcd60e51b815260040161040c906123b2565b6000818152600560209081526040808320546001600160a01b0316808452600790925290912054156107b8576001600160a01b03811660009081526007602052604090205461079e906001906123fd565b6001600160a01b0382166000908152600760205260409020555b600082815260056020526040812080546001600160a01b0319168155906107e26001830182611c78565b6107f0600283016000611c78565b50600301805460ff191690556001600160a01b0381167f0b7cdc900b8ac2bfb0d3b2139ecf8be43e21bb1c2e2380190243786c5c5bd3d38333604051610837929190612414565b60405180910390a25050565b6000546001600160a01b031633148061086b57503360009081526002602052604090205460ff165b6108875760405162461bcd60e51b815260040161040c90612328565b6001806000828254610899919061242b565b909155505060015460008381526005602052604090206003015460ff166108d25760405162461bcd60e51b815260040161040c9061234e565b600083815260046020526040902080546108eb90612377565b1515905061090b5760405162461bcd60e51b815260040161040c906123b2565b60008381526006602052604090206004015460ff161561093d5760405162461bcd60e51b815260040161040c90612443565b600083815260046020526040902080546109df91849161095c90612377565b80601f016020809104026020016040519081016040528092919081815260200182805461098890612377565b80156109d55780601f106109aa576101008083540402835291602001916109d5565b820191906000526020600020905b8154815290600101906020018083116109b857829003601f168201915b5050505050611bd6565b610a1a5760405162461bcd60e51b815260206004820152600c60248201526b18da1958dac819985a5b195960a21b604482015260640161040c565b600083815260056020908152604080832081516080810190925280546001600160a01b031682526001810180549293919291840191610a5890612377565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8490612377565b8015610ad15780601f10610aa657610100808354040283529160200191610ad1565b820191906000526020600020905b815481529060010190602001808311610ab457829003601f168201915b50505050508152602001600282018054610aea90612377565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1690612377565b8015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b50505091835250506003919091015460ff161515602091820152600086815260059091526040812080546001600160a01b0319168155919250610ba96001830182611c78565b610bb7600283016000611c78565b506003908101805460ff199081169091556040805160a08101825284516001600160a01b03908116825233602080840191825242848601908152606085018c815260016080870181815260008f815260068652898120985189549089166001600160a01b0319918216178a55965192890180549389169390971692909217909555915160028701555197850197909755905160049093018054931515939095169290921790935560058152818420549092168352600790915290205415610cb95780516001600160a01b0316600090815260076020526040902054610c9e906001906123fd565b81516001600160a01b03166000908152600760205260409020555b6003548151604051632142170760e11b81523060048201526001600160a01b039182166024820152604481018790529116906342842e0e90606401600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b505082516001600160a01b031691507fc304de2ee997fd24fdfed24b05b8a4f183098cf2178adca7bd77238f65f84a2290508533604051610d64929190612414565b60405180910390a2506001548114610da95760405162461bcd60e51b815260206004820152600860248201526772652d656e74727960c01b604482015260640161040c565b505050565b6040805160038082526080820190925260609160208201838036833701905050604051637a46619360e11b815260048101849052909150309063f48cc32690602401602060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e31919061247a565b81600081518110610e4457610e44612312565b91151560209283029190910190910152610e5d826116b0565b81600181518110610e7057610e70612312565b91151560209283029190910190910152610e8982611729565b81600281518110610e9c57610e9c612312565b91151560209283029190910190910152919050565b333b15610f005760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f7420626520696e766f6b656420627920636f6e7472616374000000604482015260640161040c565b3360009081526008602052604090205460ff1615610f6b5760405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742072656465656d206120746f6b656e20617420746869732074696044820152616d6560f01b606482015260840161040c565b3360009081526007602052604090205460031015610fe05760405162461bcd60e51b815260206004820152602c60248201527f796f75206861766520746f6f206d616e79207265717565737473206f70656e2060448201526b617420746869732074696d6560a01b606482015260840161040c565b60008381526006602052604090206004015460ff16156110125760405162461bcd60e51b815260040161040c90612443565b6000838152600460205260409020805461102b90612377565b1515905061104b5760405162461bcd60e51b815260040161040c906123b2565b60008381526005602052604090206003015460ff16156110b95760405162461bcd60e51b815260206004820152602360248201527f7265717565737420616c7265616479206f70656e20666f72207468697320746f60448201526235b2b760e91b606482015260840161040c565b600083815260046020526040902080546110d891849161095c90612377565b6111185760405162461bcd60e51b81526020600482015260116024820152701d985b1a59185d1a5bdb8819985a5b1959607a1b604482015260640161040c565b604051806080016040528061112a3390565b6001600160a01b039081168252602080830186905260408084018690526001606090940184905260008881526005835220845181546001600160a01b0319169316929092178255838101518051929361118b93908501929190910190611cb2565b50604082015180516111a7916002840191602090910190611cb2565b50606091909101516003909101805460ff1916911515919091179055336000908152600760205260409020546111de90600161242b565b33600081815260076020908152604091829020939093555185815290917f67da995c6df7166078290dae7ac4f9c90eeb269d051c434663949b26f04dba1d910160405180910390a2505050565b6000546001600160a01b031633148061125357503360009081526002602052604090205460ff165b61126f5760405162461bcd60e51b815260040161040c90612328565b6000828152600460205260409020805461128890612377565b1590506112c55760405162461bcd60e51b815260206004820152600b60248201526a185b1c9958591e481cd95d60aa1b604482015260640161040c565b6003546040516331a9108f60e11b81526004810184905230916001600160a01b031690636352211e90602401602060405180830381865afa15801561130e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113329190612497565b6001600160a01b0316146113a15760405162461bcd60e51b815260206004820152603060248201527f706c65617365207472616e736665722074686520746f6b656e20746f2074686960448201526f1cc818dbdb9d1c9858dd08199a5c9cdd60821b606482015260840161040c565b60008281526004602090815260409091208251610da992840190611cb2565b600081815260046020526040902080546113d990612377565b1515905061141e5760405162461bcd60e51b81526020600482015260126024820152716d7573742062652072656465656d61626c6560701b604482015260640161040c565b60008181526006602052604090206004015460ff16156114805760405162461bcd60e51b815260206004820152601e60248201527f616c72656164792072656465656d65642063616e6e6f74206368616e67650000604482015260640161040c565b600081815260046020526040812061149791611c78565b50565b6000546060906001600160a01b03163314806114c557503360009081526002602052604090205460ff165b6114e15760405162461bcd60e51b815260040161040c90612328565b600082815260046020526040902080546114fa90612377565b80601f016020809104026020016040519081016040528092919081815260200182805461152690612377565b80156115735780601f1061154857610100808354040283529160200191611573565b820191906000526020600020905b81548152906001019060200180831161155657829003601f168201915b50505050509050919050565b60008181526005602052604081206003015460ff166115a057506000919050565b506000908152600560205260409020546001600160a01b031690565b6000546001600160a01b03163314806115e457503360009081526002602052604090205460ff165b6116005760405162461bcd60e51b815260040161040c90612328565b805182511461163c5760405162461bcd60e51b81526020600482015260086024820152670dad2e6dac2e8c6d60c31b604482015260640161040c565b60005b8151811015610da957600083828151811061165c5761165c612312565b6020026020010151905082828151811061167857611678612312565b60200260200101516004600083815260200190815260200160002090805190602001906116a6929190611cb2565b505060010161163f565b60009081526006602052604090206004015460ff1690565b600080546001600160a01b03163314806116f157503360009081526002602052604090205460ff165b61170d5760405162461bcd60e51b815260040161040c90612328565b506001600160a01b031660009081526007602052604090205490565b60009081526005602052604090206003015460ff16151560011490565b61177c604051806080016040528060006001600160a01b0316815260200160608152602001606081526020016000151581525090565b3360009081526002602052604090205460ff16806117a457506000546001600160a01b031633145b806117bf5750336117b48361157f565b6001600160a01b0316145b6118015760405162461bcd60e51b8152602060048201526013602482015272696e76616c6964207065726d697373696f6e7360681b604482015260640161040c565b60008281526005602090815260409182902082516080810190935280546001600160a01b03168352600181018054919284019161183d90612377565b80601f016020809104026020016040519081016040528092919081815260200182805461186990612377565b80156118b65780601f1061188b576101008083540402835291602001916118b6565b820191906000526020600020905b81548152906001019060200180831161189957829003601f168201915b505050505081526020016002820180546118cf90612377565b80601f01602080910402602001604051908101604052809291908181526020018280546118fb90612377565b80156119485780601f1061191d57610100808354040283529160200191611948565b820191906000526020600020905b81548152906001019060200180831161192b57829003601f168201915b50505091835250506003919091015460ff16151560209091015292915050565b60003361197457600080fd5b503360009081526007602052604090205490565b600080546001600160a01b03838116911614806119bd57506001600160a01b03821660009081526002602052604090205460ff165b92915050565b6000546001600160a01b03163314806119eb57503360009081526002602052604090205460ff165b611a075760405162461bcd60e51b815260040161040c90612328565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314611a5c5760405162461bcd60e51b815260040161040c906122ec565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b60008181526004602052604081208054611aeb90612377565b15159392505050565b6000546001600160a01b03163314611b1e5760405162461bcd60e51b815260040161040c906122ec565b6000546001600160a01b0383811691161415611b755760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b604482015260640161040c565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b8151815160009184918491908114611bf457600093505050506119bd565b60005b81811015611c6b57828181518110611c1157611c11612312565b602001015160f81c60f81b6001600160f81b031916848281518110611c3857611c38612312565b01602001516001600160f81b03191614611c595760009450505050506119bd565b80611c63816124b4565b915050611bf7565b5060019695505050505050565b508054611c8490612377565b6000825580601f10611c94575050565b601f0160209004906000526020600020908101906114979190611d36565b828054611cbe90612377565b90600052602060002090601f016020900481019282611ce05760008555611d26565b82601f10611cf957805160ff1916838001178555611d26565b82800160010185558215611d26579182015b82811115611d26578251825591602001919060010190611d0b565b50611d32929150611d36565b5090565b5b80821115611d325760008155600101611d37565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611d8957611d89611d4b565b604052919050565b60006001600160401b03821115611daa57611daa611d4b565b5060051b60200190565b6001600160a01b038116811461149757600080fd5b60006020808385031215611ddc57600080fd5b82356001600160401b03811115611df257600080fd5b8301601f81018513611e0357600080fd5b8035611e16611e1182611d91565b611d61565b81815260059190911b82018301908381019087831115611e3557600080fd5b928401925b82841015611e5c578335611e4d81611db4565b82529284019290840190611e3a565b979650505050505050565b600080600080600060808688031215611e7f57600080fd5b8535611e8a81611db4565b94506020860135611e9a81611db4565b93506040860135925060608601356001600160401b0380821115611ebd57600080fd5b818801915088601f830112611ed157600080fd5b813581811115611ee057600080fd5b896020828501011115611ef257600080fd5b9699959850939650602001949392505050565b600060208284031215611f1757600080fd5b5035919050565b600082601f830112611f2f57600080fd5b81356001600160401b03811115611f4857611f48611d4b565b611f5b601f8201601f1916602001611d61565b818152846020838601011115611f7057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611fa057600080fd5b8235915060208301356001600160401b03811115611fbd57600080fd5b611fc985828601611f1e565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561200d578351151583529284019291840191600101611fef565b50909695505050505050565b60008060006060848603121561202e57600080fd5b8335925060208401356001600160401b038082111561204c57600080fd5b61205887838801611f1e565b9350604086013591508082111561206e57600080fd5b5061207b86828701611f1e565b9150509250925092565b6000815180845260005b818110156120ab5760208185018101518683018201520161208f565b818111156120bd576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006120e56020830184612085565b9392505050565b600082601f8301126120fd57600080fd5b8135602061210d611e1183611d91565b82815260059290921b8401810191818101908684111561212c57600080fd5b8286015b8481101561216b5780356001600160401b0381111561214f5760008081fd5b61215d8986838b0101611f1e565b845250918301918301612130565b509695505050505050565b6000806040838503121561218957600080fd5b82356001600160401b03808211156121a057600080fd5b818501915085601f8301126121b457600080fd5b813560206121c4611e1183611d91565b82815260059290921b840181019181810190898411156121e357600080fd5b948201945b83861015612201578535825294820194908201906121e8565b9650508601359250508082111561221757600080fd5b50611fc9858286016120ec565b60006020828403121561223657600080fd5b81356120e581611db4565b602080825282516001600160a01b0316828201528201516080604083015260009061226f60a0840182612085565b90506040840151601f1984830301606085015261228c8282612085565b9150506060840151151560808401528091505092915050565b801515811461149757600080fd5b600080604083850312156122c657600080fd5b82356122d181611db4565b915060208301356122e1816122a5565b809150509250929050565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b6020808252600f908201526e1a5b9d985b1a59081c995c5d595cdd608a1b604082015260600190565b600181811c9082168061238b57607f821691505b602082108114156123ac57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601b908201527a1a5b9d985b1a59081c9959195b5c1d1a5bdb881d1bdad95b881a59602a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561240f5761240f6123e7565b500390565b9182526001600160a01b0316602082015260400190565b6000821982111561243e5761243e6123e7565b500190565b6020808252601f908201527f746f6b656e2068617320616c7265616479206265656e2072656465656d656400604082015260600190565b60006020828403121561248c57600080fd5b81516120e5816122a5565b6000602082840312156124a957600080fd5b81516120e581611db4565b60006000198214156124c8576124c86123e7565b506001019056fea2646970667358221220d2a1730a0ea2a5a6c8a7c4014176ea9afb65fdde2fb2d182204863f2cfd915b664736f6c634300080c0033",
  "libraries": {
    "InfinityMintUtil": "0xe2A4755A9b489Fe957FCa6d8DD3Edb170a31921d"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveRedeem(uint256,bytes)": {
        "notice": "Approves a request to redeem a token"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Allows this redemption contract to receive ERC721 from approved addresses only"
      },
      "rejectRedeem(uint256)": {
        "notice": "Rejects a request to redeem a token"
      },
      "requestToken(uint256,bytes,bytes)": {
        "notice": "Requests a token to be transfered to the sender"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16908,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 16911,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "executionCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 16915,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "approved",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10159,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "erc721",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC721)17929"
      },
      {
        "astId": 10163,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "activeRedemptions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_bytes_storage)"
      },
      {
        "astId": 10168,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "requests",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Request)10190_storage)"
      },
      {
        "astId": 10173,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "successfulRedemptions",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(SuccessfulRedemption)10201_storage)"
      },
      {
        "astId": 10177,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "requestCount",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10181,
        "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
        "label": "blockedWallets",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC721)17929": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint256,t_struct(Request)10190_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Mod_Redemption.Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Request)10190_storage"
      },
      "t_mapping(t_uint256,t_struct(SuccessfulRedemption)10201_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Mod_Redemption.SuccessfulRedemption)",
        "numberOfBytes": "32",
        "value": "t_struct(SuccessfulRedemption)10201_storage"
      },
      "t_struct(Request)10190_storage": {
        "encoding": "inplace",
        "label": "struct Mod_Redemption.Request",
        "members": [
          {
            "astId": 10183,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10185,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "redemption",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 10187,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "key",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 10189,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "valid",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(SuccessfulRedemption)10201_storage": {
        "encoding": "inplace",
        "label": "struct Mod_Redemption.SuccessfulRedemption",
        "members": [
          {
            "astId": 10192,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "receiver",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10194,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "admin",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 10196,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10198,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "tokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 10200,
            "contract": "contracts/__mods/Redemption.sol:Mod_Redemption",
            "label": "valid",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}