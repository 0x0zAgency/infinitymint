{
  "address": "0x8120EF40b29100b37BBda3B20d1261CC3F355e95",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "PermissionChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "addToRegisteredTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "deleteFromRegisteredTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "deleteOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "previewCount",
          "type": "uint256"
        }
      ],
      "name": "deletePreview",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "previewCount",
          "type": "uint256"
        }
      ],
      "name": "findPreviews",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "forceTokenFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllRegisteredTokens",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getOption",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPreviewAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getPreviewTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getRegisteredTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "hasDestinaton",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "previewTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "previews",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "pathId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "pathSize",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentTokenId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "mintData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "option",
          "type": "string"
        }
      ],
      "name": "setOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "setPreview",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "setPreviewTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPrivilages",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        }
      ],
      "name": "setTokenFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setUnsafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "_flag",
          "type": "string"
        }
      ],
      "name": "tokenFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "tokenFlags",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validDestination",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x725ec9373d9fdd7b60e0df3b3965d5faf1adaa614af9f4a098f6506a82b02892",
  "receipt": {
    "to": null,
    "from": "0xDFF917ab602e8508b6907dE1b038dd52B24A2379",
    "contractAddress": "0x8120EF40b29100b37BBda3B20d1261CC3F355e95",
    "transactionIndex": 1,
    "gasUsed": "3126275",
    "logsBloom": "0x
    "blockHash": "0x60c89fa75a37cd5182d32c8d90d911579c93d40a9398939f7570864e5f10bd00",
    "transactionHash": "0x725ec9373d9fdd7b60e0df3b3965d5faf1adaa614af9f4a098f6506a82b02892",
    "logs": [],
    "blockNumber": 9462462,
    "cumulativeGasUsed": "3173128",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c554005d846e5256cfd947c8d0a331d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"addToRegisteredTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"deleteFromRegisteredTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"deleteOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"previewCount\",\"type\":\"uint256\"}],\"name\":\"deletePreview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"previewCount\",\"type\":\"uint256\"}],\"name\":\"findPreviews\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"forceTokenFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllRegisteredTokens\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getOption\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPreviewAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPreviewTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getRegisteredTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasDestinaton\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"previewTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"previews\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"option\",\"type\":\"string\"}],\"name\":\"setOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"setPreview\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setPreviewTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPrivilages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"position\",\"type\":\"bool\"}],\"name\":\"setTokenFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_flag\",\"type\":\"string\"}],\"name\":\"tokenFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenFlags\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validDestination\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xTinman.eth\",\"details\":\"Attached to to an InfinityMint\",\"kind\":\"dev\",\"methods\":{\"addToRegisteredTokens(address,uint32)\":{\"details\":\"for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.\",\"params\":{\"owner\":\"the owner to add the token too\",\"tokenId\":\"the tokenId to add\"}},\"forceTokenFlag(uint256,string,bool)\":{\"details\":\"NOTE: This can only be called by contracts to curb rugging potential\"},\"get(uint32)\":{\"details\":\"returns an InfinityObject defined in {InfinityMintObject}\",\"params\":{\"tokenId\":\"the tokenId to get\"}},\"getAllRegisteredTokens(address)\":{\"details\":\"NOTE: This will only track 256 tokens\",\"params\":{\"owner\":\"the owner to look for\"}},\"getOwner(uint32)\":{\"params\":{\"tokenId\":\"the tokenId to get the owner of\"}},\"getRegisteredTokenCount(address)\":{\"details\":\"Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId\",\"params\":{\"owner\":\"the owner to get the length of\"}},\"setOption(address,string,string)\":{\"details\":\"this is used for instance inside of tokenURI\"}},\"title\":\"InfinityMint storage controller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToRegisteredTokens(address,uint32)\":{\"notice\":\"this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments\"},\"deleteOption(address,string)\":{\"notice\":\"deletes an option\"},\"flag(address,string)\":{\"notice\":\"returns the value of a flag\"},\"flag(uint256,string)\":{\"notice\":\"returns the value of a flag\"},\"forceTokenFlag(uint256,string,bool)\":{\"notice\":\"Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way\"},\"get(uint32)\":{\"notice\":\"returns a token\"},\"getAllRegisteredTokens(address)\":{\"notice\":\"returns an integer array containing the token ids owned by the owner address\"},\"getOption(address,string)\":{\"notice\":\"returns a global option for all the addresses tokens\"},\"getOwner(uint32)\":{\"notice\":\"returns address of the owner of this token\"},\"getPreviewTimestamp(address)\":{\"notice\":\"returns true if the address is preview blocked and unable to receive more previews\"},\"getRegisteredTokenCount(address)\":{\"notice\":\"Gets the amount of registered tokens\"},\"hasDestinaton(uint32,uint256)\":{\"notice\":\"Returns true if address in destinations array is valid, destinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token\"},\"previewTimestamp(address)\":{\"notice\":\"previews timestamps of when new previews can be made\"},\"previews(address,uint256)\":{\"notice\":\"previews\"},\"setOption(address,string,string)\":{\"notice\":\"sets an option for a users tokens\"},\"setPreviewTimestamp(address,uint256)\":{\"notice\":\"sets a time in the future they an have more previews\"},\"setUnsafe(uint32,bytes)\":{\"notice\":\"use normal set when can because of the checks it does before the set, this does no checks\"},\"tokenFlags(uint256,string)\":{\"notice\":\"a list of tokenFlags associated with the token\"},\"transfer(address,uint32)\":{\"notice\":\"Sets the owner field in the token to another value\"}},\"notice\":\"Stores the outcomes of the mint process and previews and also unlock keys\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InfinityMintStorage.sol\":\"InfinityMintStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/Authentication.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\n\\nabstract contract Authentication {\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    mapping(address => bool) public approved;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount, 're-entry');\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, 'not deployer');\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], 'not approved');\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, 'cannot modify deployer');\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multiRevoke(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = false;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n}\\n\",\"keccak256\":\"0xd37a41033d6a0329dcdc6da0eccbb7f743c5ab2206cd46d634969987ad0f557a\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintObject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\n//this is implemented by every contract in our system\\nimport './InfinityMintUtil.sol';\\nimport './InfinityMintValues.sol';\\n\\nabstract contract InfinityMintObject {\\n    /// @notice The main InfinityMint object, TODO: Work out a way for this to easily be modified\\n    struct InfinityObject {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32 currentTokenId;\\n        address owner;\\n        uint32[] colours;\\n        bytes mintData;\\n        uint32[] assets;\\n        string[] names;\\n        address[] destinations;\\n    }\\n\\n    /// @notice Creates a new struct from arguments\\n    /// @dev Stickers are not set through this, structs cannot be made with sticker contracts already set and have to be set manually\\n    /// @param currentTokenId the tokenId,\\n    /// @param pathId the infinity mint paths id\\n    /// @param pathSize the size of the path (only for vectors)\\n    /// @param assets the assets which make up the token\\n    /// @param names the names of the token, its just the name but split by the splaces.\\n    /// @param colours decimal colours which will be convered to hexadecimal colours\\n    /// @param mintData variable dynamic field which is passed to ERC721 Implementor contracts and used in a lot of dynamic stuff\\n    /// @param _sender aka the owner of the token\\n    /// @param destinations a list of contracts associated with this token\\n    function createInfinityObject(\\n        uint32 currentTokenId,\\n        uint32 pathId,\\n        uint32 pathSize,\\n        uint32[] memory assets,\\n        string[] memory names,\\n        uint32[] memory colours,\\n        bytes memory mintData,\\n        address _sender,\\n        address[] memory destinations\\n    ) internal pure returns (InfinityObject memory) {\\n        return\\n            InfinityObject(\\n                pathId,\\n                pathSize,\\n                currentTokenId,\\n                _sender, //the sender aka owner\\n                colours,\\n                mintData,\\n                assets,\\n                names,\\n                destinations\\n            );\\n    }\\n\\n    /// @notice basically unpacks a return object into bytes.\\n    function encode(InfinityObject memory data)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        return\\n            abi.encode(\\n                data.pathId,\\n                data.pathSize,\\n                data.currentTokenId,\\n                data.owner,\\n                abi.encode(data.colours),\\n                data.mintData,\\n                data.assets,\\n                data.names,\\n                data.destinations\\n            );\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function sender() internal view returns (address) {\\n        return (msg.sender);\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function value() internal view returns (uint256) {\\n        return (msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x0a87425c22c2712174729d193a7148fce4bd85244e381094211bf2b556894e07\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintStorage.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\nimport './Authentication.sol';\\n\\n/// @title InfinityMint storage controller\\n/// @author 0xTinman.eth\\n/// @notice Stores the outcomes of the mint process and previews and also unlock keys\\n/// @dev Attached to to an InfinityMint\\ncontract InfinityMintStorage is Authentication, InfinityMintObject {\\n    /// @notice previews\\n    mapping(address => mapping(uint256 => InfinityObject)) public previews;\\n    /// @notice previews timestamps of when new previews can be made\\n    mapping(address => uint256) public previewTimestamp;\\n    /// @notice all of the token data\\n    mapping(uint32 => InfinityObject) private tokens;\\n    /// @notice Address flags can be toggled and effect all of the tokens\\n    mapping(address => mapping(string => bool)) private flags;\\n    /// @notice a list of tokenFlags associated with the token\\n    mapping(uint256 => mapping(string => bool)) public tokenFlags;\\n    /// @notice a list of options\\n    mapping(address => mapping(string => string)) private options;\\n    /// @notice private mapping holding a list of tokens for owned by the address for quick look up\\n    mapping(address => uint32[]) private registeredTokens;\\n\\n    /// @notice returns true if the address is preview blocked and unable to receive more previews\\n    function getPreviewTimestamp(address addr) external view returns (uint256) {\\n        return previewTimestamp[addr];\\n    }\\n\\n    /// @notice sets a time in the future they an have more previews\\n    function setPreviewTimestamp(\\n        address addr,\\n        uint256 timestamp\\n    ) public onlyApproved {\\n        require(timestamp > block.timestamp, 'timestamp must be in the future');\\n        previewTimestamp[addr] = timestamp;\\n    }\\n\\n    /**\\n\\t\\t@notice Returns true if address in destinations array is valid,\\n\\t\\tdestinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token\\n\\t*/\\n    function hasDestinaton(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return\\n            tokens[tokenId].destinations.length < index &&\\n            tokens[tokenId].destinations[index] != address(0x0);\\n    }\\n\\n    /// @notice Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way\\n    /// @dev NOTE: This can only be called by contracts to curb rugging potential\\n    function forceTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        require(this.flag(tokenId, 'immutable') != true, 'token is immutable');\\n        require(\\n            !InfinityMintUtil.isEqual(bytes(_flag), 'immutable'),\\n            'token immutable/mutable state cannot be modified this way for security reasons'\\n        );\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        uint256 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    /// @notice sets an option for a users tokens\\n    /// @dev this is used for instance inside of tokenURI\\n    function setOption(\\n        address addr,\\n        string memory key,\\n        string memory option\\n    ) public onlyApproved {\\n        options[addr][key] = option;\\n    }\\n\\n    /// @notice deletes an option\\n    function deleteOption(address addr, string memory key) public onlyApproved {\\n        delete options[addr][key];\\n    }\\n\\n    /// @notice returns a global option for all the addresses tokens\\n    function getOption(\\n        address addr,\\n        string memory key\\n    ) external view returns (string memory) {\\n        return options[addr][key];\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setFlag(\\n        address addr,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        flags[addr][_flag] = position;\\n    }\\n\\n    function tokenFlag(\\n        uint32 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    function validDestination(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return (tokens[tokenId].owner != address(0x0) &&\\n            tokens[tokenId].destinations.length != 0 &&\\n            index < tokens[tokenId].destinations.length &&\\n            tokens[tokenId].destinations[index] != address(0x0));\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        address addr,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return flags[addr][_flag];\\n    }\\n\\n    /// @notice returns address of the owner of this token\\n    /// @param tokenId the tokenId to get the owner of\\n    function getOwner(uint32 tokenId) public view returns (address) {\\n        return tokens[tokenId].owner;\\n    }\\n\\n    /// @notice returns an integer array containing the token ids owned by the owner address\\n    /// @dev NOTE: This will only track 256 tokens\\n    /// @param owner the owner to look for\\n    function getAllRegisteredTokens(\\n        address owner\\n    ) public view returns (uint32[] memory) {\\n        return registeredTokens[owner];\\n    }\\n\\n    /// @notice this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments\\n    /// @dev for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.\\n    /// @param owner the owner to add the token too\\n    /// @param tokenId the tokenId to add\\n    function addToRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        //if the l\\n        if (registeredTokens[owner].length < 256)\\n            registeredTokens[owner].push(tokenId);\\n    }\\n\\n    /// @notice Gets the amount of registered tokens\\n    /// @dev Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId\\n    /// @param owner the owner to get the length of\\n    function getRegisteredTokenCount(\\n        address owner\\n    ) public view returns (uint256) {\\n        return registeredTokens[owner].length;\\n    }\\n\\n    /// @notice returns a token\\n    /// @dev returns an InfinityObject defined in {InfinityMintObject}\\n    /// @param tokenId the tokenId to get\\n    function get(uint32 tokenId) public view returns (InfinityObject memory) {\\n        if (tokens[tokenId].owner == address(0x0)) revert('invalid token');\\n\\n        return tokens[tokenId];\\n    }\\n\\n    /// @notice Sets the owner field in the token to another value\\n    function transfer(address to, uint32 tokenId) public onlyApproved {\\n        //set to new owner\\n        tokens[tokenId].owner = to;\\n    }\\n\\n    function set(\\n        uint32 tokenId,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        require(data.owner != address(0x0), 'null owner');\\n        require(data.currentTokenId == tokenId, 'tokenID mismatch');\\n        tokens[tokenId] = data;\\n    }\\n\\n    /// @notice use normal set when can because of the checks it does before the set, this does no checks\\n    function setUnsafe(uint32 tokenId, bytes memory data) public onlyApproved {\\n        tokens[tokenId] = abi.decode(data, (InfinityObject));\\n    }\\n\\n    function setPreview(\\n        address owner,\\n        uint256 index,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        previews[owner][index] = data;\\n    }\\n\\n    function getPreviewAt(\\n        address owner,\\n        uint256 index\\n    ) external view returns (InfinityObject memory) {\\n        require(\\n            previews[owner][index].owner != address(0x0),\\n            'invalid preview'\\n        );\\n\\n        return previews[owner][index];\\n    }\\n\\n    function findPreviews(\\n        address owner,\\n        uint256 previewCount\\n    ) public view onlyApproved returns (InfinityObject[] memory) {\\n        InfinityObject[] memory temp = new InfinityObject[](previewCount);\\n        for (uint256 i = 0; i < previewCount; ) {\\n            temp[i] = previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return temp;\\n    }\\n\\n    function deletePreview(\\n        address owner,\\n        uint256 previewCount\\n    ) public onlyApproved {\\n        for (uint256 i = 0; i < previewCount; ) {\\n            delete previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        delete previewTimestamp[owner];\\n    }\\n\\n    function deleteFromRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        uint256 length = registeredTokens[owner].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (registeredTokens[owner][i] == tokenId) {\\n                registeredTokens[owner][i] = registeredTokens[owner][\\n                    length - 1\\n                ];\\n                registeredTokens[owner].pop();\\n                break;\\n            }\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x72b74ba349ccc61b393fcab63b52de1ef8dde72c3335451a742eafa7cea99929\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintUtil.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nlibrary InfinityMintUtil {\\n    function toString(\\n        uint256 _i\\n    ) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return '0';\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function filepath(\\n        string memory directory,\\n        string memory file,\\n        string memory extension\\n    ) internal pure returns (string memory) {\\n        return string.concat(directory, file, extension);\\n    }\\n\\n    //checks if two strings (or bytes) are equal\\n    function isEqual(bytes memory s1, bytes memory s2) external pure returns (bool) {\\n    if (s1.length != s2.length) return false;\\n    for (uint256 i = 0; i < s1.length; i++) {\\n        if (s1[i] != s2[i]) return false;\\n    }\\n    return true;\\n}\\n\\n}\\n\",\"keccak256\":\"0xd256bbb4e2a9534e9a21ba4ae8bbf755c254c7d2ba5bd65e099e27f27277e3bc\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintValues.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\ncontract InfinityMintValues {\\n    mapping(string => uint256) private values;\\n    mapping(string => bool) private booleanValues;\\n    mapping(string => bool) private registeredValues;\\n\\n    address deployer;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n    }\\n\\n    modifier onlyDeployer() {\\n        if (msg.sender != deployer) revert();\\n        _;\\n    }\\n\\n    function setValue(string memory key, uint256 value) public onlyDeployer {\\n        values[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function setupValues(\\n        string[] memory keys,\\n        uint256[] memory _values,\\n        string[] memory booleanKeys,\\n        bool[] memory _booleanValues\\n    ) public onlyDeployer {\\n        require(keys.length == _values.length);\\n        require(booleanKeys.length == _booleanValues.length);\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            setValue(keys[i], _values[i]);\\n        }\\n\\n        for (uint256 i = 0; i < booleanKeys.length; i++) {\\n            setBooleanValue(booleanKeys[i], _booleanValues[i]);\\n        }\\n    }\\n\\n    function setBooleanValue(string memory key, bool value)\\n        public\\n        onlyDeployer\\n    {\\n        booleanValues[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function isTrue(string memory key) external view returns (bool) {\\n        return booleanValues[key];\\n    }\\n\\n    function getValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) revert('Invalid Value');\\n\\n        return values[key];\\n    }\\n\\n    /// @dev Default value it returns is zero\\n    function tryGetValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) return 0;\\n\\n        return values[key];\\n    }\\n}\\n\",\"keccak256\":\"0xfc6def9724b4ef9aa3ace6bafaa9fc232c65788adb1349c9ce5f1f9681c3b078\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782558152600260205260408120805460ff19166001908117909155556136bd8061004e6000396000f3fe608060405234801561001057600080fd5b50600436106101bc5760003560e01c80638ff58aa6116100f55780638ff58aa6146103c15780639e4c138e146103d45780639fcc3f5e146103e7578063a22d583a146103fa578063a30f08341461040d578063a820ab9714610431578063ab732c9414610444578063c28cf06114610457578063cd40005e1461046a578063d15d4150146104a9578063d5f39488146104bc578063d8a26e3a146104cf578063d8b964e6146104ef578063db8b7da314610512578063e572596814610525578063f2fde38b1461054e578063fccc3cd514610561578063fe684c0e1461057457600080fd5b806310a8c7a9146101c15780631774bc3b146101d65780631b41c858146101e95780631f7c4d371461021157806328ab73921461022457806331ed86d214610237578063349233e61461024a5780633d7b94d6146102815780634198477e14610294578063495c94dd146102b4578063621b23e2146102d45780636407a40014610322578063699ad661146103425780636c17fd7914610355578063712a908d146103685780637e11d1c614610388578063800974841461039b5780638180a717146103ae575b600080fd5b6101d46101cf3660046128e4565b610587565b005b6101d46101e4366004612998565b610627565b6101fc6101f7366004612a2a565b6106bc565b60405190151581526020015b60405180910390f35b6101fc61021f366004612a2a565b610727565b6101d4610232366004612a56565b6107c8565b6101d46102453660046128e4565b610932565b610273610258366004612aa5565b6001600160a01b031660009081526009602052604090205490565b604051908152602001610208565b6101d461028f366004612ad0565b6109c5565b6102736102a2366004612aa5565b60046020526000908152604090205481565b6102c76102c2366004612aa5565b610a50565b6040516102089190612b2a565b61030a6102e2366004612b74565b63ffffffff16600090815260056020526040902054600160601b90046001600160a01b031690565b6040516001600160a01b039091168152602001610208565b610335610330366004612b91565b610ae8565b6040516102089190612dba565b6101d4610350366004612e1c565b610ef3565b6101fc610363366004612a56565b610f78565b61037b610376366004612e1c565b610fb6565b6040516102089190612e3a565b6101fc610396366004612e1c565b611080565b6101d46103a9366004612e4d565b6110a6565b6101d46103bc366004612ad0565b611124565b6101d46103cf366004612b91565b611315565b6101d46103e2366004612e4d565b6113f6565b6101d46103f5366004612e4d565b6115eb565b6101d4610408366004612b91565b6116a7565b61042061041b366004612b91565b611756565b604051610208959493929190612e86565b6101d461043f366004612ed1565b611836565b6101d4610452366004613113565b6118a4565b6101d4610465366004613161565b611a05565b6101fc6104783660046131a6565b6007602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6101fc6104b7366004612aa5565b611b80565b60005461030a906001600160a01b031681565b6104e26104dd366004612b74565b611bbb565b60405161020891906131d6565b6101fc6104fd366004612aa5565b60026020526000908152604090205460ff1681565b6101fc6105203660046131a6565b611f5b565b610273610533366004612aa5565b6001600160a01b031660009081526004602052604090205490565b6101d461055c366004612aa5565b611f77565b6104e261056f366004612b91565b612017565b6101d46105823660046131e9565b6123c8565b6000546001600160a01b031633146105ba5760405162461bcd60e51b81526004016105b190613217565b60405180910390fd5b80516105c557600080fd5b60005b8151811015610623576001600260008484815181106105e9576105e961323d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105c8565b5050565b6000546001600160a01b031633148061064f57503360009081526002602052604090205460ff165b61066b5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038316600090815260086020526040908190209051829190610695908590613279565b908152602001604051809103902090805190602001906106b69291906124aa565b50505050565b63ffffffff821660009081526005602081905260408220015482118015610720575063ffffffff831660009081526005602081905260408220018054849081106107085761070861323d565b6000918252602090912001546001600160a01b031614155b9392505050565b63ffffffff8216600090815260056020526040812054600160601b90046001600160a01b031615801590610773575063ffffffff83166000908152600560208190526040909120015415155b8015610797575063ffffffff83166000908152600560208190526040909120015482105b8015610720575063ffffffff831660009081526005602081905260408220018054849081106107085761070861323d565b6000546001600160a01b03163314806107f057503360009081526002602052604090205460ff165b61080c5760405162461bcd60e51b81526004016105b190613253565b808060200190518101906108209190613457565b63ffffffff80841660009081526005602090815260409182902084518154868401519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180516108ba926001850192019061252e565b5060a082015180516108d69160028401916020909101906124aa565b5060c082015180516108f291600384019160209091019061252e565b5060e0820151805161090e9160048401916020909101906125d8565b50610100820151805161092b916005840191602090910190612631565b5050505050565b6000546001600160a01b0316331461095c5760405162461bcd60e51b81526004016105b190613217565b805161096757600080fd5b60005b81518110156106235760006002600084848151811061098b5761098b61323d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161096a565b6000546001600160a01b03163314806109ed57503360009081526002602052604090205460ff165b610a095760405162461bcd60e51b81526004016105b190613253565b806007600085815260200190815260200160002083604051610a2b9190613279565b908152604051908190036020019020805491151560ff19909216919091179055505050565b6001600160a01b038116600090815260096020908152604091829020805483518184028101840190945280845260609392830182828015610adc57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610a9f5790505b50505050509050919050565b6000546060906001600160a01b0316331480610b1357503360009081526002602052604090205460ff165b610b2f5760405162461bcd60e51b81526004016105b190613253565b6000826001600160401b03811115610b4957610b496127b9565b604051908082528060200260200182016040528015610b8257816020015b610b6f612686565b815260200190600190039081610b675790505b50905060005b83811015610eeb576001600160a01b038086166000908152600360209081526040808320858452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b9004909416606085015260018101805484518185028101850190955280855291936080860193909290830182828015610c6c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610c2f5790505b50505050508152602001600282018054610c859061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb19061359c565b8015610cfe5780601f10610cd357610100808354040283529160200191610cfe565b820191906000526020600020905b815481529060010190602001808311610ce157829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610d8257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d455790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e5c578382906000526020600020018054610dcf9061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfb9061359c565b8015610e485780601f10610e1d57610100808354040283529160200191610e48565b820191906000526020600020905b815481529060010190602001808311610e2b57829003601f168201915b505050505081526020019060010190610db0565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ebd57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e9f575b505050505081525050828281518110610ed857610ed861323d565b6020908102919091010152600101610b88565b509392505050565b6000546001600160a01b0316331480610f1b57503360009081526002602052604090205460ff165b610f375760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038216600090815260086020526040908190209051610f5e908390613279565b9081526020016040518091039020600061062391906126ed565b63ffffffff82166000908152600760205260408082209051610f9b908490613279565b9081526040519081900360200190205460ff16905092915050565b6001600160a01b03821660009081526008602052604090819020905160609190610fe1908490613279565b90815260200160405180910390208054610ffa9061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546110269061359c565b80156110735780601f1061104857610100808354040283529160200191611073565b820191906000526020600020905b81548152906001019060200180831161105657829003601f168201915b5050505050905092915050565b6001600160a01b0382166000908152600660205260408082209051610f9b908490613279565b6000546001600160a01b03163314806110ce57503360009081526002602052604090205460ff165b6110ea5760405162461bcd60e51b81526004016105b190613253565b63ffffffff16600090815260056020526040902080546001600160a01b03909216600160601b026001600160601b03909216919091179055565b6000546001600160a01b031633148061114c57503360009081526002602052604090205460ff165b6111685760405162461bcd60e51b81526004016105b190613253565b60405163db8b7da360e01b8152309063db8b7da39061118b9086906004016135f3565b602060405180830381865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cc919061360b565b1515600114156112135760405162461bcd60e51b8152602060048201526012602482015271746f6b656e20697320696d6d757461626c6560701b60448201526064016105b1565b604051630686b30160e31b8152733411DEa54B2FB5aB203616bB614D61794432d7B19063343598089061124a908590600401613628565b602060405180830381865af4158015611267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128b919061360b565b15610a095760405162461bcd60e51b815260206004820152604e60248201527f746f6b656e20696d6d757461626c652f6d757461626c6520737461746520636160448201527f6e6e6f74206265206d6f64696669656420746869732077617920666f7220736560648201526d63757269747920726561736f6e7360901b608482015260a4016105b1565b6000546001600160a01b031633148061133d57503360009081526002602052604090205460ff165b6113595760405162461bcd60e51b81526004016105b190613253565b60005b818110156113da576001600160a01b0383166000908152600360209081526040808320848452909152812081815590611398600183018261272a565b6113a66002830160006126ed565b6113b460038301600061272a565b6113c260048301600061274f565b6113d060058301600061276d565b505060010161135c565b50506001600160a01b0316600090815260046020526040812055565b6000546001600160a01b031633148061141e57503360009081526002602052604090205460ff165b61143a5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038216600090815260096020526040812054905b818110156106b6576001600160a01b0384166000908152600960205260409020805463ffffffff85169190839081106114905761149061323d565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614156115e3576001600160a01b03841660009081526009602052604090206114dd60018461364c565b815481106114ed576114ed61323d565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660096000866001600160a01b03166001600160a01b0316815260200190815260200160002082815481106115495761154961323d565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060096000856001600160a01b03166001600160a01b031681526020019081526020016000208054806115b0576115b0613671565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556106b6565b600101611455565b6000546001600160a01b031633148061161357503360009081526002602052604090205460ff165b61162f5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b0382166000908152600960205260409020546101001115610623576001600160a01b03821660009081526009602090815260408220805460018101825590835291206008820401805463ffffffff80851660046007909516949094026101000a938402930219169190911790555050565b6000546001600160a01b03163314806116cf57503360009081526002602052604090205460ff165b6116eb5760405162461bcd60e51b81526004016105b190613253565b42811161173a5760405162461bcd60e51b815260206004820152601f60248201527f74696d657374616d70206d75737420626520696e20746865206675747572650060448201526064016105b1565b6001600160a01b03909116600090815260046020526040902055565b60036020908152600092835260408084209091529082529020805460028201805463ffffffff80841694600160201b8504821694600160401b810490921693600160601b9092046001600160a01b0316929091906117b39061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546117df9061359c565b801561182c5780601f106118015761010080835404028352916020019161182c565b820191906000526020600020905b81548152906001019060200180831161180f57829003601f168201915b5050505050905085565b6000546001600160a01b031633148061185e57503360009081526002602052604090205460ff165b61187a5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038316600090815260066020526040908190209051829190610a2b908590613279565b6000546001600160a01b03163314806118cc57503360009081526002602052604090205460ff165b6118e85760405162461bcd60e51b81526004016105b190613253565b6001600160a01b0380841660009081526003602090815260408083208684528252918290208451815483870151948701516060880151909616600160601b026001600160601b0363ffffffff978816600160401b02166001600160401b03968816600160201b026001600160401b0319909316979093169690961717939093169290921792909217815560808301518051849361198c92600185019291019061252e565b5060a082015180516119a89160028401916020909101906124aa565b5060c082015180516119c491600384019160209091019061252e565b5060e082015180516119e09160048401916020909101906125d8565b5061010082015180516119fd916005840191602090910190612631565b505050505050565b6000546001600160a01b0316331480611a2d57503360009081526002602052604090205460ff165b611a495760405162461bcd60e51b81526004016105b190613253565b60608101516001600160a01b0316611a905760405162461bcd60e51b815260206004820152600a602482015269373ab6361037bbb732b960b11b60448201526064016105b1565b8163ffffffff16816040015163ffffffff1614611ae25760405162461bcd60e51b815260206004820152601060248201526f0e8ded6cadc928840dad2e6dac2e8c6d60831b60448201526064016105b1565b63ffffffff80831660009081526005602090815260409182902084518154838701519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180518493926108ba92600185019291019061252e565b600080546001600160a01b0383811691161480611bb557506001600160a01b03821660009081526002602052604090205460ff165b92915050565b611bc3612686565b63ffffffff8216600090815260056020526040902054600160601b90046001600160a01b0316611c255760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016105b1565b63ffffffff82811660009081526005602090815260409182902082516101208101845281548086168252600160201b8104861682850152600160401b810490951681850152600160601b9094046001600160a01b0316606085015260018101805484518185028101850190955280855291936080860193909290830182828015611cfa57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611cbd5790505b50505050508152602001600282018054611d139061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3f9061359c565b8015611d8c5780601f10611d6157610100808354040283529160200191611d8c565b820191906000526020600020905b815481529060010190602001808311611d6f57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611e1057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611dd35790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611eea578382906000526020600020018054611e5d9061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054611e899061359c565b8015611ed65780601f10611eab57610100808354040283529160200191611ed6565b820191906000526020600020905b815481529060010190602001808311611eb957829003601f168201915b505050505081526020019060010190611e3e565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f4b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f2d575b5050505050815250509050919050565b6000828152600760205260408082209051610f9b908490613279565b6000546001600160a01b03163314611fa15760405162461bcd60e51b81526004016105b190613217565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b61201f612686565b6001600160a01b038381166000908152600360209081526040808320868452909152902054600160601b90041661208a5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964207072657669657760881b60448201526064016105b1565b6001600160a01b038084166000908152600360209081526040808320868452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b900490941660608501526001810180548451818502810185019095528085529193608086019390929083018282801561216657602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116121295790505b5050505050815260200160028201805461217f9061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546121ab9061359c565b80156121f85780601f106121cd576101008083540402835291602001916121f8565b820191906000526020600020905b8154815290600101906020018083116121db57829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561227c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161223f5790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156123565783829060005260206000200180546122c99061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546122f59061359c565b80156123425780601f1061231757610100808354040283529160200191612342565b820191906000526020600020905b81548152906001019060200180831161232557829003601f168201915b5050505050815260200190600101906122aa565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156123b757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612399575b505050505081525050905092915050565b6000546001600160a01b031633146123f25760405162461bcd60e51b81526004016105b190613217565b6000546001600160a01b03838116911614156124495760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016105b1565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b8280546124b69061359c565b90600052602060002090601f0160209004810192826124d8576000855561251e565b82601f106124f157805160ff191683800117855561251e565b8280016001018555821561251e579182015b8281111561251e578251825591602001919060010190612503565b5061252a929150612787565b5090565b8280548282559060005260206000209060070160089004810192821561251e5791602002820160005b8382111561259b57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302612557565b80156125cb5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261259b565b505061252a929150612787565b828054828255906000526020600020908101928215612625579160200282015b8281111561262557825180516126159184916020909101906124aa565b50916020019190600101906125f8565b5061252a92915061279c565b82805482825590600052602060002090810192821561251e579160200282015b8281111561251e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612651565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b5080546126f99061359c565b6000825580601f10612709575050565b601f0160209004906000526020600020908101906127279190612787565b50565b5080546000825560070160089004906000526020600020908101906127279190612787565b5080546000825590600052602060002090810190612727919061279c565b508054600082559060005260206000209081019061272791905b5b8082111561252a5760008155600101612788565b8082111561252a5760006127b082826126ed565b5060010161279c565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156127f2576127f26127b9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612820576128206127b9565b604052919050565b60006001600160401b03821115612841576128416127b9565b5060051b60200190565b6001600160a01b038116811461272757600080fd5b803561286b8161284b565b919050565b600082601f83011261288157600080fd5b8135602061289661289183612828565b6127f8565b82815260059290921b840181019181810190868411156128b557600080fd5b8286015b848110156128d95780356128cc8161284b565b83529183019183016128b9565b509695505050505050565b6000602082840312156128f657600080fd5b81356001600160401b0381111561290c57600080fd5b61291884828501612870565b949350505050565b60006001600160401b03821115612939576129396127b9565b50601f01601f191660200190565b600082601f83011261295857600080fd5b813561296661289182612920565b81815284602083860101111561297b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156129ad57600080fd5b83356129b88161284b565b925060208401356001600160401b03808211156129d457600080fd5b6129e087838801612947565b935060408601359150808211156129f657600080fd5b50612a0386828701612947565b9150509250925092565b63ffffffff8116811461272757600080fd5b803561286b81612a0d565b60008060408385031215612a3d57600080fd5b8235612a4881612a0d565b946020939093013593505050565b60008060408385031215612a6957600080fd5b8235612a7481612a0d565b915060208301356001600160401b03811115612a8f57600080fd5b612a9b85828601612947565b9150509250929050565b600060208284031215612ab757600080fd5b81356107208161284b565b801515811461272757600080fd5b600080600060608486031215612ae557600080fd5b8335925060208401356001600160401b03811115612b0257600080fd5b612b0e86828701612947565b9250506040840135612b1f81612ac2565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612b6857835163ffffffff1683529284019291840191600101612b46565b50909695505050505050565b600060208284031215612b8657600080fd5b813561072081612a0d565b60008060408385031215612ba457600080fd5b8235612a488161284b565b600081518084526020808501945080840160005b83811015612be557815163ffffffff1687529582019590820190600101612bc3565b509495945050505050565b60005b83811015612c0b578181015183820152602001612bf3565b838111156106b65750506000910152565b60008151808452612c34816020860160208601612bf0565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612c90578284038952612c7e848351612c1c565b98850198935090840190600101612c66565b5091979650505050505050565b600081518084526020808501945080840160005b83811015612be55781516001600160a01b031687529582019590820190600101612cb1565b805163ffffffff16825260006101206020830151612cfc602086018263ffffffff169052565b506040830151612d14604086018263ffffffff169052565b506060830151612d2f60608601826001600160a01b03169052565b506080830151816080860152612d4782860182612baf565b91505060a083015184820360a0860152612d618282612c1c565b91505060c083015184820360c0860152612d7b8282612baf565b91505060e083015184820360e0860152612d958282612c48565b9150506101008084015185830382870152612db08382612c9d565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612e0f57603f19888603018452612dfd858351612cd6565b94509285019290850190600101612de1565b5092979650505050505050565b60008060408385031215612e2f57600080fd5b8235612a748161284b565b6020815260006107206020830184612c1c565b60008060408385031215612e6057600080fd5b8235612e6b8161284b565b91506020830135612e7b81612a0d565b809150509250929050565b63ffffffff86811682528581166020830152841660408201526001600160a01b038316606082015260a060808201819052600090612ec690830184612c1c565b979650505050505050565b600080600060608486031215612ee657600080fd5b8335612ef18161284b565b925060208401356001600160401b03811115612b0257600080fd5b600082601f830112612f1d57600080fd5b81356020612f2d61289183612828565b82815260059290921b84018101918181019086841115612f4c57600080fd5b8286015b848110156128d9578035612f6381612a0d565b8352918301918301612f50565b600082601f830112612f8157600080fd5b81356020612f9161289183612828565b82815260059290921b84018101918181019086841115612fb057600080fd5b8286015b848110156128d95780356001600160401b03811115612fd35760008081fd5b612fe18986838b0101612947565b845250918301918301612fb4565b6000610120828403121561300257600080fd5b61300a6127cf565b905061301582612a1f565b815261302360208301612a1f565b602082015261303460408301612a1f565b604082015261304560608301612860565b606082015260808201356001600160401b038082111561306457600080fd5b61307085838601612f0c565b608084015260a084013591508082111561308957600080fd5b61309585838601612947565b60a084015260c08401359150808211156130ae57600080fd5b6130ba85838601612f0c565b60c084015260e08401359150808211156130d357600080fd5b6130df85838601612f70565b60e0840152610100915081840135818111156130fa57600080fd5b61310686828701612870565b8385015250505092915050565b60008060006060848603121561312857600080fd5b83356131338161284b565b92506020840135915060408401356001600160401b0381111561315557600080fd5b612a0386828701612fef565b6000806040838503121561317457600080fd5b823561317f81612a0d565b915060208301356001600160401b0381111561319a57600080fd5b612a9b85828601612fef565b600080604083850312156131b957600080fd5b8235915060208301356001600160401b03811115612a8f57600080fd5b6020815260006107206020830184612cd6565b600080604083850312156131fc57600080fd5b82356132078161284b565b91506020830135612e7b81612ac2565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b6000825161328b818460208701612bf0565b9190910192915050565b805161286b81612a0d565b805161286b8161284b565b600082601f8301126132bc57600080fd5b815160206132cc61289183612828565b82815260059290921b840181019181810190868411156132eb57600080fd5b8286015b848110156128d957805161330281612a0d565b83529183019183016132ef565b600061331d61289184612920565b905082815283838301111561333157600080fd5b610720836020830184612bf0565b600082601f83011261335057600080fd5b6107208383516020850161330f565b600082601f83011261337057600080fd5b8151602061338061289183612828565b82815260059290921b8401810191818101908684111561339f57600080fd5b8286015b848110156128d95780516001600160401b038111156133c25760008081fd5b8701603f810189136133d45760008081fd5b6133e589868301516040840161330f565b8452509183019183016133a3565b600082601f83011261340457600080fd5b8151602061341461289183612828565b82815260059290921b8401810191818101908684111561343357600080fd5b8286015b848110156128d957805161344a8161284b565b8352918301918301613437565b60006020828403121561346957600080fd5b81516001600160401b038082111561348057600080fd5b90830190610120828603121561349557600080fd5b61349d6127cf565b6134a683613295565b81526134b460208401613295565b60208201526134c560408401613295565b60408201526134d6606084016132a0565b60608201526080830151828111156134ed57600080fd5b6134f9878286016132ab565b60808301525060a08301518281111561351157600080fd5b61351d8782860161333f565b60a08301525060c08301518281111561353557600080fd5b613541878286016132ab565b60c08301525060e08301518281111561355957600080fd5b6135658782860161335f565b60e083015250610100808401518381111561357f57600080fd5b61358b888287016133f3565b918301919091525095945050505050565b600181811c908216806135b057607f821691505b602082108114156135d157634e487b7160e01b600052602260045260246000fd5b50919050565b6009815268696d6d757461626c6560b81b602082015260400190565b818152604060208201526000610720604083016135d7565b60006020828403121561361d57600080fd5b815161072081612ac2565b60408152600061363b6040830184612c1c565b8281036020840152612918816135d7565b60008282101561366c57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122018ecb00484c2281aeaa100a6812227c003e55da722a79139644bfbd44b54148664736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101bc5760003560e01c80638ff58aa6116100f55780638ff58aa6146103c15780639e4c138e146103d45780639fcc3f5e146103e7578063a22d583a146103fa578063a30f08341461040d578063a820ab9714610431578063ab732c9414610444578063c28cf06114610457578063cd40005e1461046a578063d15d4150146104a9578063d5f39488146104bc578063d8a26e3a146104cf578063d8b964e6146104ef578063db8b7da314610512578063e572596814610525578063f2fde38b1461054e578063fccc3cd514610561578063fe684c0e1461057457600080fd5b806310a8c7a9146101c15780631774bc3b146101d65780631b41c858146101e95780631f7c4d371461021157806328ab73921461022457806331ed86d214610237578063349233e61461024a5780633d7b94d6146102815780634198477e14610294578063495c94dd146102b4578063621b23e2146102d45780636407a40014610322578063699ad661146103425780636c17fd7914610355578063712a908d146103685780637e11d1c614610388578063800974841461039b5780638180a717146103ae575b600080fd5b6101d46101cf3660046128e4565b610587565b005b6101d46101e4366004612998565b610627565b6101fc6101f7366004612a2a565b6106bc565b60405190151581526020015b60405180910390f35b6101fc61021f366004612a2a565b610727565b6101d4610232366004612a56565b6107c8565b6101d46102453660046128e4565b610932565b610273610258366004612aa5565b6001600160a01b031660009081526009602052604090205490565b604051908152602001610208565b6101d461028f366004612ad0565b6109c5565b6102736102a2366004612aa5565b60046020526000908152604090205481565b6102c76102c2366004612aa5565b610a50565b6040516102089190612b2a565b61030a6102e2366004612b74565b63ffffffff16600090815260056020526040902054600160601b90046001600160a01b031690565b6040516001600160a01b039091168152602001610208565b610335610330366004612b91565b610ae8565b6040516102089190612dba565b6101d4610350366004612e1c565b610ef3565b6101fc610363366004612a56565b610f78565b61037b610376366004612e1c565b610fb6565b6040516102089190612e3a565b6101fc610396366004612e1c565b611080565b6101d46103a9366004612e4d565b6110a6565b6101d46103bc366004612ad0565b611124565b6101d46103cf366004612b91565b611315565b6101d46103e2366004612e4d565b6113f6565b6101d46103f5366004612e4d565b6115eb565b6101d4610408366004612b91565b6116a7565b61042061041b366004612b91565b611756565b604051610208959493929190612e86565b6101d461043f366004612ed1565b611836565b6101d4610452366004613113565b6118a4565b6101d4610465366004613161565b611a05565b6101fc6104783660046131a6565b6007602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6101fc6104b7366004612aa5565b611b80565b60005461030a906001600160a01b031681565b6104e26104dd366004612b74565b611bbb565b60405161020891906131d6565b6101fc6104fd366004612aa5565b60026020526000908152604090205460ff1681565b6101fc6105203660046131a6565b611f5b565b610273610533366004612aa5565b6001600160a01b031660009081526004602052604090205490565b6101d461055c366004612aa5565b611f77565b6104e261056f366004612b91565b612017565b6101d46105823660046131e9565b6123c8565b6000546001600160a01b031633146105ba5760405162461bcd60e51b81526004016105b190613217565b60405180910390fd5b80516105c557600080fd5b60005b8151811015610623576001600260008484815181106105e9576105e961323d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105c8565b5050565b6000546001600160a01b031633148061064f57503360009081526002602052604090205460ff165b61066b5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038316600090815260086020526040908190209051829190610695908590613279565b908152602001604051809103902090805190602001906106b69291906124aa565b50505050565b63ffffffff821660009081526005602081905260408220015482118015610720575063ffffffff831660009081526005602081905260408220018054849081106107085761070861323d565b6000918252602090912001546001600160a01b031614155b9392505050565b63ffffffff8216600090815260056020526040812054600160601b90046001600160a01b031615801590610773575063ffffffff83166000908152600560208190526040909120015415155b8015610797575063ffffffff83166000908152600560208190526040909120015482105b8015610720575063ffffffff831660009081526005602081905260408220018054849081106107085761070861323d565b6000546001600160a01b03163314806107f057503360009081526002602052604090205460ff165b61080c5760405162461bcd60e51b81526004016105b190613253565b808060200190518101906108209190613457565b63ffffffff80841660009081526005602090815260409182902084518154868401519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180516108ba926001850192019061252e565b5060a082015180516108d69160028401916020909101906124aa565b5060c082015180516108f291600384019160209091019061252e565b5060e0820151805161090e9160048401916020909101906125d8565b50610100820151805161092b916005840191602090910190612631565b5050505050565b6000546001600160a01b0316331461095c5760405162461bcd60e51b81526004016105b190613217565b805161096757600080fd5b60005b81518110156106235760006002600084848151811061098b5761098b61323d565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161096a565b6000546001600160a01b03163314806109ed57503360009081526002602052604090205460ff165b610a095760405162461bcd60e51b81526004016105b190613253565b806007600085815260200190815260200160002083604051610a2b9190613279565b908152604051908190036020019020805491151560ff19909216919091179055505050565b6001600160a01b038116600090815260096020908152604091829020805483518184028101840190945280845260609392830182828015610adc57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610a9f5790505b50505050509050919050565b6000546060906001600160a01b0316331480610b1357503360009081526002602052604090205460ff165b610b2f5760405162461bcd60e51b81526004016105b190613253565b6000826001600160401b03811115610b4957610b496127b9565b604051908082528060200260200182016040528015610b8257816020015b610b6f612686565b815260200190600190039081610b675790505b50905060005b83811015610eeb576001600160a01b038086166000908152600360209081526040808320858452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b9004909416606085015260018101805484518185028101850190955280855291936080860193909290830182828015610c6c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610c2f5790505b50505050508152602001600282018054610c859061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb19061359c565b8015610cfe5780601f10610cd357610100808354040283529160200191610cfe565b820191906000526020600020905b815481529060010190602001808311610ce157829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610d8257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610d455790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e5c578382906000526020600020018054610dcf9061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfb9061359c565b8015610e485780601f10610e1d57610100808354040283529160200191610e48565b820191906000526020600020905b815481529060010190602001808311610e2b57829003601f168201915b505050505081526020019060010190610db0565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ebd57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e9f575b505050505081525050828281518110610ed857610ed861323d565b6020908102919091010152600101610b88565b509392505050565b6000546001600160a01b0316331480610f1b57503360009081526002602052604090205460ff165b610f375760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038216600090815260086020526040908190209051610f5e908390613279565b9081526020016040518091039020600061062391906126ed565b63ffffffff82166000908152600760205260408082209051610f9b908490613279565b9081526040519081900360200190205460ff16905092915050565b6001600160a01b03821660009081526008602052604090819020905160609190610fe1908490613279565b90815260200160405180910390208054610ffa9061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546110269061359c565b80156110735780601f1061104857610100808354040283529160200191611073565b820191906000526020600020905b81548152906001019060200180831161105657829003601f168201915b5050505050905092915050565b6001600160a01b0382166000908152600660205260408082209051610f9b908490613279565b6000546001600160a01b03163314806110ce57503360009081526002602052604090205460ff165b6110ea5760405162461bcd60e51b81526004016105b190613253565b63ffffffff16600090815260056020526040902080546001600160a01b03909216600160601b026001600160601b03909216919091179055565b6000546001600160a01b031633148061114c57503360009081526002602052604090205460ff165b6111685760405162461bcd60e51b81526004016105b190613253565b60405163db8b7da360e01b8152309063db8b7da39061118b9086906004016135f3565b602060405180830381865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cc919061360b565b1515600114156112135760405162461bcd60e51b8152602060048201526012602482015271746f6b656e20697320696d6d757461626c6560701b60448201526064016105b1565b604051630686b30160e31b815273__$7f45f87f0a73bf4fcfd10e7fc7fd4aefbf$__9063343598089061124a908590600401613628565b602060405180830381865af4158015611267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128b919061360b565b15610a095760405162461bcd60e51b815260206004820152604e60248201527f746f6b656e20696d6d757461626c652f6d757461626c6520737461746520636160448201527f6e6e6f74206265206d6f64696669656420746869732077617920666f7220736560648201526d63757269747920726561736f6e7360901b608482015260a4016105b1565b6000546001600160a01b031633148061133d57503360009081526002602052604090205460ff165b6113595760405162461bcd60e51b81526004016105b190613253565b60005b818110156113da576001600160a01b0383166000908152600360209081526040808320848452909152812081815590611398600183018261272a565b6113a66002830160006126ed565b6113b460038301600061272a565b6113c260048301600061274f565b6113d060058301600061276d565b505060010161135c565b50506001600160a01b0316600090815260046020526040812055565b6000546001600160a01b031633148061141e57503360009081526002602052604090205460ff165b61143a5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038216600090815260096020526040812054905b818110156106b6576001600160a01b0384166000908152600960205260409020805463ffffffff85169190839081106114905761149061323d565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614156115e3576001600160a01b03841660009081526009602052604090206114dd60018461364c565b815481106114ed576114ed61323d565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660096000866001600160a01b03166001600160a01b0316815260200190815260200160002082815481106115495761154961323d565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060096000856001600160a01b03166001600160a01b031681526020019081526020016000208054806115b0576115b0613671565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556106b6565b600101611455565b6000546001600160a01b031633148061161357503360009081526002602052604090205460ff165b61162f5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b0382166000908152600960205260409020546101001115610623576001600160a01b03821660009081526009602090815260408220805460018101825590835291206008820401805463ffffffff80851660046007909516949094026101000a938402930219169190911790555050565b6000546001600160a01b03163314806116cf57503360009081526002602052604090205460ff165b6116eb5760405162461bcd60e51b81526004016105b190613253565b42811161173a5760405162461bcd60e51b815260206004820152601f60248201527f74696d657374616d70206d75737420626520696e20746865206675747572650060448201526064016105b1565b6001600160a01b03909116600090815260046020526040902055565b60036020908152600092835260408084209091529082529020805460028201805463ffffffff80841694600160201b8504821694600160401b810490921693600160601b9092046001600160a01b0316929091906117b39061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546117df9061359c565b801561182c5780601f106118015761010080835404028352916020019161182c565b820191906000526020600020905b81548152906001019060200180831161180f57829003601f168201915b5050505050905085565b6000546001600160a01b031633148061185e57503360009081526002602052604090205460ff165b61187a5760405162461bcd60e51b81526004016105b190613253565b6001600160a01b038316600090815260066020526040908190209051829190610a2b908590613279565b6000546001600160a01b03163314806118cc57503360009081526002602052604090205460ff165b6118e85760405162461bcd60e51b81526004016105b190613253565b6001600160a01b0380841660009081526003602090815260408083208684528252918290208451815483870151948701516060880151909616600160601b026001600160601b0363ffffffff978816600160401b02166001600160401b03968816600160201b026001600160401b0319909316979093169690961717939093169290921792909217815560808301518051849361198c92600185019291019061252e565b5060a082015180516119a89160028401916020909101906124aa565b5060c082015180516119c491600384019160209091019061252e565b5060e082015180516119e09160048401916020909101906125d8565b5061010082015180516119fd916005840191602090910190612631565b505050505050565b6000546001600160a01b0316331480611a2d57503360009081526002602052604090205460ff165b611a495760405162461bcd60e51b81526004016105b190613253565b60608101516001600160a01b0316611a905760405162461bcd60e51b815260206004820152600a602482015269373ab6361037bbb732b960b11b60448201526064016105b1565b8163ffffffff16816040015163ffffffff1614611ae25760405162461bcd60e51b815260206004820152601060248201526f0e8ded6cadc928840dad2e6dac2e8c6d60831b60448201526064016105b1565b63ffffffff80831660009081526005602090815260409182902084518154838701519487015160608801516001600160a01b0316600160601b026001600160601b03918816600160401b02919091166001600160401b03968816600160201b026001600160401b03199093169390971692909217179390931693909317919091178255608083015180518493926108ba92600185019291019061252e565b600080546001600160a01b0383811691161480611bb557506001600160a01b03821660009081526002602052604090205460ff165b92915050565b611bc3612686565b63ffffffff8216600090815260056020526040902054600160601b90046001600160a01b0316611c255760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016105b1565b63ffffffff82811660009081526005602090815260409182902082516101208101845281548086168252600160201b8104861682850152600160401b810490951681850152600160601b9094046001600160a01b0316606085015260018101805484518185028101850190955280855291936080860193909290830182828015611cfa57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611cbd5790505b50505050508152602001600282018054611d139061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3f9061359c565b8015611d8c5780601f10611d6157610100808354040283529160200191611d8c565b820191906000526020600020905b815481529060010190602001808311611d6f57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611e1057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611dd35790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611eea578382906000526020600020018054611e5d9061359c565b80601f0160208091040260200160405190810160405280929190818152602001828054611e899061359c565b8015611ed65780601f10611eab57610100808354040283529160200191611ed6565b820191906000526020600020905b815481529060010190602001808311611eb957829003601f168201915b505050505081526020019060010190611e3e565b50505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f4b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f2d575b5050505050815250509050919050565b6000828152600760205260408082209051610f9b908490613279565b6000546001600160a01b03163314611fa15760405162461bcd60e51b81526004016105b190613217565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b61201f612686565b6001600160a01b038381166000908152600360209081526040808320868452909152902054600160601b90041661208a5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964207072657669657760881b60448201526064016105b1565b6001600160a01b038084166000908152600360209081526040808320868452825291829020825161012081018452815463ffffffff8082168352600160201b8204811683860152600160401b82041682860152600160601b900490941660608501526001810180548451818502810185019095528085529193608086019390929083018282801561216657602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116121295790505b5050505050815260200160028201805461217f9061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546121ab9061359c565b80156121f85780601f106121cd576101008083540402835291602001916121f8565b820191906000526020600020905b8154815290600101906020018083116121db57829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561227c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161223f5790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156123565783829060005260206000200180546122c99061359c565b80601f01602080910402602001604051908101604052809291908181526020018280546122f59061359c565b80156123425780601f1061231757610100808354040283529160200191612342565b820191906000526020600020905b81548152906001019060200180831161232557829003601f168201915b5050505050815260200190600101906122aa565b505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156123b757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612399575b505050505081525050905092915050565b6000546001600160a01b031633146123f25760405162461bcd60e51b81526004016105b190613217565b6000546001600160a01b03838116911614156124495760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016105b1565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b8280546124b69061359c565b90600052602060002090601f0160209004810192826124d8576000855561251e565b82601f106124f157805160ff191683800117855561251e565b8280016001018555821561251e579182015b8281111561251e578251825591602001919060010190612503565b5061252a929150612787565b5090565b8280548282559060005260206000209060070160089004810192821561251e5791602002820160005b8382111561259b57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302612557565b80156125cb5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261259b565b505061252a929150612787565b828054828255906000526020600020908101928215612625579160200282015b8281111561262557825180516126159184916020909101906124aa565b50916020019190600101906125f8565b5061252a92915061279c565b82805482825590600052602060002090810192821561251e579160200282015b8281111561251e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612651565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b5080546126f99061359c565b6000825580601f10612709575050565b601f0160209004906000526020600020908101906127279190612787565b50565b5080546000825560070160089004906000526020600020908101906127279190612787565b5080546000825590600052602060002090810190612727919061279c565b508054600082559060005260206000209081019061272791905b5b8082111561252a5760008155600101612788565b8082111561252a5760006127b082826126ed565b5060010161279c565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156127f2576127f26127b9565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612820576128206127b9565b604052919050565b60006001600160401b03821115612841576128416127b9565b5060051b60200190565b6001600160a01b038116811461272757600080fd5b803561286b8161284b565b919050565b600082601f83011261288157600080fd5b8135602061289661289183612828565b6127f8565b82815260059290921b840181019181810190868411156128b557600080fd5b8286015b848110156128d95780356128cc8161284b565b83529183019183016128b9565b509695505050505050565b6000602082840312156128f657600080fd5b81356001600160401b0381111561290c57600080fd5b61291884828501612870565b949350505050565b60006001600160401b03821115612939576129396127b9565b50601f01601f191660200190565b600082601f83011261295857600080fd5b813561296661289182612920565b81815284602083860101111561297b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156129ad57600080fd5b83356129b88161284b565b925060208401356001600160401b03808211156129d457600080fd5b6129e087838801612947565b935060408601359150808211156129f657600080fd5b50612a0386828701612947565b9150509250925092565b63ffffffff8116811461272757600080fd5b803561286b81612a0d565b60008060408385031215612a3d57600080fd5b8235612a4881612a0d565b946020939093013593505050565b60008060408385031215612a6957600080fd5b8235612a7481612a0d565b915060208301356001600160401b03811115612a8f57600080fd5b612a9b85828601612947565b9150509250929050565b600060208284031215612ab757600080fd5b81356107208161284b565b801515811461272757600080fd5b600080600060608486031215612ae557600080fd5b8335925060208401356001600160401b03811115612b0257600080fd5b612b0e86828701612947565b9250506040840135612b1f81612ac2565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612b6857835163ffffffff1683529284019291840191600101612b46565b50909695505050505050565b600060208284031215612b8657600080fd5b813561072081612a0d565b60008060408385031215612ba457600080fd5b8235612a488161284b565b600081518084526020808501945080840160005b83811015612be557815163ffffffff1687529582019590820190600101612bc3565b509495945050505050565b60005b83811015612c0b578181015183820152602001612bf3565b838111156106b65750506000910152565b60008151808452612c34816020860160208601612bf0565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612c90578284038952612c7e848351612c1c565b98850198935090840190600101612c66565b5091979650505050505050565b600081518084526020808501945080840160005b83811015612be55781516001600160a01b031687529582019590820190600101612cb1565b805163ffffffff16825260006101206020830151612cfc602086018263ffffffff169052565b506040830151612d14604086018263ffffffff169052565b506060830151612d2f60608601826001600160a01b03169052565b506080830151816080860152612d4782860182612baf565b91505060a083015184820360a0860152612d618282612c1c565b91505060c083015184820360c0860152612d7b8282612baf565b91505060e083015184820360e0860152612d958282612c48565b9150506101008084015185830382870152612db08382612c9d565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612e0f57603f19888603018452612dfd858351612cd6565b94509285019290850190600101612de1565b5092979650505050505050565b60008060408385031215612e2f57600080fd5b8235612a748161284b565b6020815260006107206020830184612c1c565b60008060408385031215612e6057600080fd5b8235612e6b8161284b565b91506020830135612e7b81612a0d565b809150509250929050565b63ffffffff86811682528581166020830152841660408201526001600160a01b038316606082015260a060808201819052600090612ec690830184612c1c565b979650505050505050565b600080600060608486031215612ee657600080fd5b8335612ef18161284b565b925060208401356001600160401b03811115612b0257600080fd5b600082601f830112612f1d57600080fd5b81356020612f2d61289183612828565b82815260059290921b84018101918181019086841115612f4c57600080fd5b8286015b848110156128d9578035612f6381612a0d565b8352918301918301612f50565b600082601f830112612f8157600080fd5b81356020612f9161289183612828565b82815260059290921b84018101918181019086841115612fb057600080fd5b8286015b848110156128d95780356001600160401b03811115612fd35760008081fd5b612fe18986838b0101612947565b845250918301918301612fb4565b6000610120828403121561300257600080fd5b61300a6127cf565b905061301582612a1f565b815261302360208301612a1f565b602082015261303460408301612a1f565b604082015261304560608301612860565b606082015260808201356001600160401b038082111561306457600080fd5b61307085838601612f0c565b608084015260a084013591508082111561308957600080fd5b61309585838601612947565b60a084015260c08401359150808211156130ae57600080fd5b6130ba85838601612f0c565b60c084015260e08401359150808211156130d357600080fd5b6130df85838601612f70565b60e0840152610100915081840135818111156130fa57600080fd5b61310686828701612870565b8385015250505092915050565b60008060006060848603121561312857600080fd5b83356131338161284b565b92506020840135915060408401356001600160401b0381111561315557600080fd5b612a0386828701612fef565b6000806040838503121561317457600080fd5b823561317f81612a0d565b915060208301356001600160401b0381111561319a57600080fd5b612a9b85828601612fef565b600080604083850312156131b957600080fd5b8235915060208301356001600160401b03811115612a8f57600080fd5b6020815260006107206020830184612cd6565b600080604083850312156131fc57600080fd5b82356132078161284b565b91506020830135612e7b81612ac2565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b6000825161328b818460208701612bf0565b9190910192915050565b805161286b81612a0d565b805161286b8161284b565b600082601f8301126132bc57600080fd5b815160206132cc61289183612828565b82815260059290921b840181019181810190868411156132eb57600080fd5b8286015b848110156128d957805161330281612a0d565b83529183019183016132ef565b600061331d61289184612920565b905082815283838301111561333157600080fd5b610720836020830184612bf0565b600082601f83011261335057600080fd5b6107208383516020850161330f565b600082601f83011261337057600080fd5b8151602061338061289183612828565b82815260059290921b8401810191818101908684111561339f57600080fd5b8286015b848110156128d95780516001600160401b038111156133c25760008081fd5b8701603f810189136133d45760008081fd5b6133e589868301516040840161330f565b8452509183019183016133a3565b600082601f83011261340457600080fd5b8151602061341461289183612828565b82815260059290921b8401810191818101908684111561343357600080fd5b8286015b848110156128d957805161344a8161284b565b8352918301918301613437565b60006020828403121561346957600080fd5b81516001600160401b038082111561348057600080fd5b90830190610120828603121561349557600080fd5b61349d6127cf565b6134a683613295565b81526134b460208401613295565b60208201526134c560408401613295565b60408201526134d6606084016132a0565b60608201526080830151828111156134ed57600080fd5b6134f9878286016132ab565b60808301525060a08301518281111561351157600080fd5b61351d8782860161333f565b60a08301525060c08301518281111561353557600080fd5b613541878286016132ab565b60c08301525060e08301518281111561355957600080fd5b6135658782860161335f565b60e083015250610100808401518381111561357f57600080fd5b61358b888287016133f3565b918301919091525095945050505050565b600181811c908216806135b057607f821691505b602082108114156135d157634e487b7160e01b600052602260045260246000fd5b50919050565b6009815268696d6d757461626c6560b81b602082015260400190565b818152604060208201526000610720604083016135d7565b60006020828403121561361d57600080fd5b815161072081612ac2565b60408152600061363b6040830184612c1c565b8281036020840152612918816135d7565b60008282101561366c57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122018ecb00484c2281aeaa100a6812227c003e55da722a79139644bfbd44b54148664736f6c634300080c0033",
  "libraries": {
    "InfinityMintUtil": "0x3411DEa54B2FB5aB203616bB614D61794432d7B1"
  },
  "devdoc": {
    "author": "0xTinman.eth",
    "details": "Attached to to an InfinityMint",
    "kind": "dev",
    "methods": {
      "addToRegisteredTokens(address,uint32)": {
        "details": "for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.",
        "params": {
          "owner": "the owner to add the token too",
          "tokenId": "the tokenId to add"
        }
      },
      "forceTokenFlag(uint256,string,bool)": {
        "details": "NOTE: This can only be called by contracts to curb rugging potential"
      },
      "get(uint32)": {
        "details": "returns an InfinityObject defined in {InfinityMintObject}",
        "params": {
          "tokenId": "the tokenId to get"
        }
      },
      "getAllRegisteredTokens(address)": {
        "details": "NOTE: This will only track 256 tokens",
        "params": {
          "owner": "the owner to look for"
        }
      },
      "getOwner(uint32)": {
        "params": {
          "tokenId": "the tokenId to get the owner of"
        }
      },
      "getRegisteredTokenCount(address)": {
        "details": "Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId",
        "params": {
          "owner": "the owner to get the length of"
        }
      },
      "setOption(address,string,string)": {
        "details": "this is used for instance inside of tokenURI"
      }
    },
    "title": "InfinityMint storage controller",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToRegisteredTokens(address,uint32)": {
        "notice": "this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments"
      },
      "deleteOption(address,string)": {
        "notice": "deletes an option"
      },
      "flag(address,string)": {
        "notice": "returns the value of a flag"
      },
      "flag(uint256,string)": {
        "notice": "returns the value of a flag"
      },
      "forceTokenFlag(uint256,string,bool)": {
        "notice": "Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way"
      },
      "get(uint32)": {
        "notice": "returns a token"
      },
      "getAllRegisteredTokens(address)": {
        "notice": "returns an integer array containing the token ids owned by the owner address"
      },
      "getOption(address,string)": {
        "notice": "returns a global option for all the addresses tokens"
      },
      "getOwner(uint32)": {
        "notice": "returns address of the owner of this token"
      },
      "getPreviewTimestamp(address)": {
        "notice": "returns true if the address is preview blocked and unable to receive more previews"
      },
      "getRegisteredTokenCount(address)": {
        "notice": "Gets the amount of registered tokens"
      },
      "hasDestinaton(uint32,uint256)": {
        "notice": "Returns true if address in destinations array is valid, destinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token"
      },
      "previewTimestamp(address)": {
        "notice": "previews timestamps of when new previews can be made"
      },
      "previews(address,uint256)": {
        "notice": "previews"
      },
      "setOption(address,string,string)": {
        "notice": "sets an option for a users tokens"
      },
      "setPreviewTimestamp(address,uint256)": {
        "notice": "sets a time in the future they an have more previews"
      },
      "setUnsafe(uint32,bytes)": {
        "notice": "use normal set when can because of the checks it does before the set, this does no checks"
      },
      "tokenFlags(uint256,string)": {
        "notice": "a list of tokenFlags associated with the token"
      },
      "transfer(address,uint32)": {
        "notice": "Sets the owner field in the token to another value"
      }
    },
    "notice": "Stores the outcomes of the mint process and previews and also unlock keys",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 458,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 461,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "executionCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 465,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "approved",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5978,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "previews",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(InfinityObject)5574_storage))"
      },
      {
        "astId": 5983,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "previewTimestamp",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5989,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "tokens",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint32,t_struct(InfinityObject)5574_storage)"
      },
      {
        "astId": 5996,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "flags",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 6003,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "tokenFlags",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 6010,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "options",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))"
      },
      {
        "astId": 6016,
        "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
        "label": "registeredTokens",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint32)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint32)dyn_storage": {
        "base": "t_uint32",
        "encoding": "dynamic_array",
        "label": "uint32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint32)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(InfinityObject)5574_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct InfinityMintObject.InfinityObject))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(InfinityObject)5574_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(InfinityObject)5574_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct InfinityMintObject.InfinityObject)",
        "numberOfBytes": "32",
        "value": "t_struct(InfinityObject)5574_storage"
      },
      "t_mapping(t_uint32,t_struct(InfinityObject)5574_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct InfinityMintObject.InfinityObject)",
        "numberOfBytes": "32",
        "value": "t_struct(InfinityObject)5574_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(InfinityObject)5574_storage": {
        "encoding": "inplace",
        "label": "struct InfinityMintObject.InfinityObject",
        "members": [
          {
            "astId": 5553,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "pathId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5555,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "pathSize",
            "offset": 4,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5557,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "currentTokenId",
            "offset": 8,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 5559,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "owner",
            "offset": 12,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5562,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "colours",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 5564,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "mintData",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 5567,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "assets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 5570,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "names",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 5573,
            "contract": "contracts/InfinityMintStorage.sol:InfinityMintStorage",
            "label": "destinations",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}