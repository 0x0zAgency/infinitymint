{
  "address": "0x2e8554caC87e71eBEcacad3E44161cea33A9018d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "valuesContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "storageContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "randomNumberContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "PermissionChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TransferedOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assetController",
      "outputs": [
        {
          "internalType": "contract Asset",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "currentTokenId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "getPreview",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "previewCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "currentTokenId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentTokenId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "mintPreview",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "pathId",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "pathSize",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "currentTokenId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "colours",
              "type": "uint32[]"
            },
            {
              "internalType": "bytes",
              "name": "mintData",
              "type": "bytes"
            },
            {
              "internalType": "uint32[]",
              "name": "assets",
              "type": "uint32[]"
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "destinations",
              "type": "address[]"
            }
          ],
          "internalType": "struct InfinityMintObject.InfinityObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomNumberController",
      "outputs": [
        {
          "internalType": "contract RandomNumber",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetContract",
          "type": "address"
        }
      ],
      "name": "setAssetController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPrivilages",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "randomNumberContract",
          "type": "address"
        }
      ],
      "name": "setRandomNumberController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageContract",
          "type": "address"
        }
      ],
      "name": "setStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storageController",
      "outputs": [
        {
          "internalType": "contract InfinityMintStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "valuesController",
      "outputs": [
        {
          "internalType": "contract InfinityMintValues",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x78310d03a1382508805f9074e15c4237611ba954a1c67f36ed987eaa17085bc1",
  "receipt": {
    "to": null,
    "from": "0xDFF917ab602e8508b6907dE1b038dd52B24A2379",
    "contractAddress": "0x2e8554caC87e71eBEcacad3E44161cea33A9018d",
    "transactionIndex": 1,
    "gasUsed": "1697229",
    "logsBloom": "0x
    "blockHash": "0x62621d1b050c21b983b89c13c12210890f99b39666e30f650e7fca9edb2f45d2",
    "transactionHash": "0x78310d03a1382508805f9074e15c4237611ba954a1c67f36ed987eaa17085bc1",
    "logs": [],
    "blockNumber": 9462481,
    "cumulativeGasUsed": "1744082",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x88B11F935975441aC5b3711e2fbA9db8E5E7c775",
    "0x8120EF40b29100b37BBda3B20d1261CC3F355e95",
    "0x67Ccfc2Ca4270DeF7922470A0DDEd1090514DFEF",
    "0x05757Fb2a6f48777765213b05Fb3E1293340E53B"
  ],
  "numDeployments": 1,
  "solcInputHash": "c554005d846e5256cfd947c8d0a331d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"valuesContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomNumberContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"PermissionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferedOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetController\",\"outputs\":[{\"internalType\":\"contract Asset\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getPreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"previewCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"mintPreview\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"pathId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"pathSize\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"currentTokenId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"colours\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"mintData\",\"type\":\"bytes\"},{\"internalType\":\"uint32[]\",\"name\":\"assets\",\"type\":\"uint32[]\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"}],\"internalType\":\"struct InfinityMintObject.InfinityObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomNumberController\",\"outputs\":[{\"internalType\":\"contract RandomNumber\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"}],\"name\":\"setAssetController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPrivilages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"randomNumberContract\",\"type\":\"address\"}],\"name\":\"setRandomNumberController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storageContract\",\"type\":\"address\"}],\"name\":\"setStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageController\",\"outputs\":[{\"internalType\":\"contract InfinityMintStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valuesController\",\"outputs\":[{\"internalType\":\"contract InfinityMintValues\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/minter/DefaultMinter.sol\":\"DefaultMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/Asset.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './RandomNumber.sol';\\n\\nabstract contract Asset {\\n    struct PartialStruct {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32[] assets;\\n        string[] names;\\n        uint32[] colours;\\n        bytes mintData;\\n    }\\n\\n    function getColours(uint32 pathId, RandomNumber randomNumberController)\\n        public\\n        virtual\\n        returns (uint32[] memory result);\\n\\n    function getDefaultName() internal virtual returns (string memory);\\n\\n    function getNextPath() external view virtual returns (uint32);\\n\\n    function pickPath(\\n        uint32 currentTokenId,\\n        RandomNumber randomNumberController\\n    ) public virtual returns (PartialStruct memory);\\n\\n    function isValidPath(uint32 pathId) external view virtual returns (bool);\\n\\n    function pickPath(\\n        uint32 pathId,\\n        uint32 currentTokenId,\\n        RandomNumber randomNumberController\\n    ) public virtual returns (PartialStruct memory);\\n\\n    function setLastAssets(uint32[] memory assets) public virtual;\\n\\n    function getNames(uint256 nameCount, RandomNumber randomNumberController)\\n        public\\n        virtual\\n        returns (string[] memory results);\\n\\n    function getRandomAsset(uint32 pathId, RandomNumber randomNumberController)\\n        external\\n        virtual\\n        returns (uint32[] memory assetsId);\\n\\n    function getMintData(\\n        uint32 pathId,\\n        uint32 tokenId,\\n        RandomNumber randomNumberController\\n    ) public virtual returns (bytes memory);\\n\\n    function addAsset(uint256 rarity) public virtual;\\n\\n    function setNextPathId(uint32 pathId) public virtual;\\n\\n    function setLastPathId(uint32 pathId) public virtual;\\n\\n    function getPathSize(uint32 pathId) public view virtual returns (uint32);\\n\\n    function getNextPathId(RandomNumber randomNumberController)\\n        public\\n        virtual\\n        returns (uint32);\\n}\\n\",\"keccak256\":\"0xf9c45bcff49089b99643efcca4496c08960eecdc04f3b1e91ab7347a01fff87b\",\"license\":\"UNLICENSED\"},\"contracts/Authentication.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\n\\nabstract contract Authentication {\\n    address public deployer;\\n    /// @notice for re-entry prevention, keeps track of a methods execution count\\n    uint256 private executionCount;\\n\\n    mapping(address => bool) public approved;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n        approved[msg.sender] = true;\\n        executionCount = 0;\\n    }\\n\\n    event PermissionChange(\\n        address indexed sender,\\n        address indexed changee,\\n        bool value\\n    );\\n\\n    event TransferedOwnership(address indexed from, address indexed to);\\n\\n    /// @notice Limits execution of a method to once in the given context.\\n    /// @dev prevents re-entry attack\\n    modifier onlyOnce() {\\n        executionCount += 1;\\n        uint256 localCounter = executionCount;\\n        _;\\n        require(localCounter == executionCount, 're-entry');\\n    }\\n\\n    modifier onlyDeployer() {\\n        require(deployer == msg.sender, 'not deployer');\\n        _;\\n    }\\n\\n    modifier onlyApproved() {\\n        require(deployer == msg.sender || approved[msg.sender], 'not approved');\\n        _;\\n    }\\n\\n    function setPrivilages(address addr, bool value) public onlyDeployer {\\n        require(addr != deployer, 'cannot modify deployer');\\n        approved[addr] = value;\\n\\n        emit PermissionChange(msg.sender, addr, value);\\n    }\\n\\n    function multiApprove(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = true;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multiRevoke(address[] memory addrs) public onlyDeployer {\\n        require(addrs.length != 0);\\n        for (uint256 i = 0; i < addrs.length; ) {\\n            approved[addrs[i]] = false;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function isAuthenticated(address addr) external view returns (bool) {\\n        return addr == deployer || approved[addr];\\n    }\\n\\n    function transferOwnership(address addr) public onlyDeployer {\\n        approved[deployer] = false;\\n        deployer = addr;\\n        approved[addr] = true;\\n\\n        emit TransferedOwnership(msg.sender, addr);\\n    }\\n}\\n\",\"keccak256\":\"0xd37a41033d6a0329dcdc6da0eccbb7f743c5ab2206cd46d634969987ad0f557a\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintObject.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\n//this is implemented by every contract in our system\\nimport './InfinityMintUtil.sol';\\nimport './InfinityMintValues.sol';\\n\\nabstract contract InfinityMintObject {\\n    /// @notice The main InfinityMint object, TODO: Work out a way for this to easily be modified\\n    struct InfinityObject {\\n        uint32 pathId;\\n        uint32 pathSize;\\n        uint32 currentTokenId;\\n        address owner;\\n        uint32[] colours;\\n        bytes mintData;\\n        uint32[] assets;\\n        string[] names;\\n        address[] destinations;\\n    }\\n\\n    /// @notice Creates a new struct from arguments\\n    /// @dev Stickers are not set through this, structs cannot be made with sticker contracts already set and have to be set manually\\n    /// @param currentTokenId the tokenId,\\n    /// @param pathId the infinity mint paths id\\n    /// @param pathSize the size of the path (only for vectors)\\n    /// @param assets the assets which make up the token\\n    /// @param names the names of the token, its just the name but split by the splaces.\\n    /// @param colours decimal colours which will be convered to hexadecimal colours\\n    /// @param mintData variable dynamic field which is passed to ERC721 Implementor contracts and used in a lot of dynamic stuff\\n    /// @param _sender aka the owner of the token\\n    /// @param destinations a list of contracts associated with this token\\n    function createInfinityObject(\\n        uint32 currentTokenId,\\n        uint32 pathId,\\n        uint32 pathSize,\\n        uint32[] memory assets,\\n        string[] memory names,\\n        uint32[] memory colours,\\n        bytes memory mintData,\\n        address _sender,\\n        address[] memory destinations\\n    ) internal pure returns (InfinityObject memory) {\\n        return\\n            InfinityObject(\\n                pathId,\\n                pathSize,\\n                currentTokenId,\\n                _sender, //the sender aka owner\\n                colours,\\n                mintData,\\n                assets,\\n                names,\\n                destinations\\n            );\\n    }\\n\\n    /// @notice basically unpacks a return object into bytes.\\n    function encode(InfinityObject memory data)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        return\\n            abi.encode(\\n                data.pathId,\\n                data.pathSize,\\n                data.currentTokenId,\\n                data.owner,\\n                abi.encode(data.colours),\\n                data.mintData,\\n                data.assets,\\n                data.names,\\n                data.destinations\\n            );\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function sender() internal view returns (address) {\\n        return (msg.sender);\\n    }\\n\\n    /// @notice Copied behavours of the open zeppelin content due to prevent msg.sender rewrite through assembly\\n    function value() internal view returns (uint256) {\\n        return (msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x0a87425c22c2712174729d193a7148fce4bd85244e381094211bf2b556894e07\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintStorage.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintObject.sol';\\nimport './Authentication.sol';\\n\\n/// @title InfinityMint storage controller\\n/// @author 0xTinman.eth\\n/// @notice Stores the outcomes of the mint process and previews and also unlock keys\\n/// @dev Attached to to an InfinityMint\\ncontract InfinityMintStorage is Authentication, InfinityMintObject {\\n    /// @notice previews\\n    mapping(address => mapping(uint256 => InfinityObject)) public previews;\\n    /// @notice previews timestamps of when new previews can be made\\n    mapping(address => uint256) public previewTimestamp;\\n    /// @notice all of the token data\\n    mapping(uint32 => InfinityObject) private tokens;\\n    /// @notice Address flags can be toggled and effect all of the tokens\\n    mapping(address => mapping(string => bool)) private flags;\\n    /// @notice a list of tokenFlags associated with the token\\n    mapping(uint256 => mapping(string => bool)) public tokenFlags;\\n    /// @notice a list of options\\n    mapping(address => mapping(string => string)) private options;\\n    /// @notice private mapping holding a list of tokens for owned by the address for quick look up\\n    mapping(address => uint32[]) private registeredTokens;\\n\\n    /// @notice returns true if the address is preview blocked and unable to receive more previews\\n    function getPreviewTimestamp(address addr) external view returns (uint256) {\\n        return previewTimestamp[addr];\\n    }\\n\\n    /// @notice sets a time in the future they an have more previews\\n    function setPreviewTimestamp(\\n        address addr,\\n        uint256 timestamp\\n    ) public onlyApproved {\\n        require(timestamp > block.timestamp, 'timestamp must be in the future');\\n        previewTimestamp[addr] = timestamp;\\n    }\\n\\n    /**\\n\\t\\t@notice Returns true if address in destinations array is valid,\\n\\t\\tdestinations array is managed by InfinityMintLinker and i used to associate contract destinations on chain with a token\\n\\t*/\\n    function hasDestinaton(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return\\n            tokens[tokenId].destinations.length < index &&\\n            tokens[tokenId].destinations[index] != address(0x0);\\n    }\\n\\n    /// @notice Allows those approved with the contract to directly force a token flag. The idea is a seperate contract would control immutable this way\\n    /// @dev NOTE: This can only be called by contracts to curb rugging potential\\n    function forceTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setTokenFlag(\\n        uint256 tokenId,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        require(this.flag(tokenId, 'immutable') != true, 'token is immutable');\\n        require(\\n            !InfinityMintUtil.isEqual(bytes(_flag), 'immutable'),\\n            'token immutable/mutable state cannot be modified this way for security reasons'\\n        );\\n        tokenFlags[tokenId][_flag] = position;\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        uint256 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    /// @notice sets an option for a users tokens\\n    /// @dev this is used for instance inside of tokenURI\\n    function setOption(\\n        address addr,\\n        string memory key,\\n        string memory option\\n    ) public onlyApproved {\\n        options[addr][key] = option;\\n    }\\n\\n    /// @notice deletes an option\\n    function deleteOption(address addr, string memory key) public onlyApproved {\\n        delete options[addr][key];\\n    }\\n\\n    /// @notice returns a global option for all the addresses tokens\\n    function getOption(\\n        address addr,\\n        string memory key\\n    ) external view returns (string memory) {\\n        return options[addr][key];\\n    }\\n\\n    //// @notice Allows the current token owner to toggle a flag on the token, for instance, locked flag being true will mean token cannot be transfered\\n    function setFlag(\\n        address addr,\\n        string memory _flag,\\n        bool position\\n    ) public onlyApproved {\\n        flags[addr][_flag] = position;\\n    }\\n\\n    function tokenFlag(\\n        uint32 tokenId,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return tokenFlags[tokenId][_flag];\\n    }\\n\\n    function validDestination(\\n        uint32 tokenId,\\n        uint256 index\\n    ) external view returns (bool) {\\n        return (tokens[tokenId].owner != address(0x0) &&\\n            tokens[tokenId].destinations.length != 0 &&\\n            index < tokens[tokenId].destinations.length &&\\n            tokens[tokenId].destinations[index] != address(0x0));\\n    }\\n\\n    /// @notice returns the value of a flag\\n    function flag(\\n        address addr,\\n        string memory _flag\\n    ) external view returns (bool) {\\n        return flags[addr][_flag];\\n    }\\n\\n    /// @notice returns address of the owner of this token\\n    /// @param tokenId the tokenId to get the owner of\\n    function getOwner(uint32 tokenId) public view returns (address) {\\n        return tokens[tokenId].owner;\\n    }\\n\\n    /// @notice returns an integer array containing the token ids owned by the owner address\\n    /// @dev NOTE: This will only track 256 tokens\\n    /// @param owner the owner to look for\\n    function getAllRegisteredTokens(\\n        address owner\\n    ) public view returns (uint32[] memory) {\\n        return registeredTokens[owner];\\n    }\\n\\n    /// @notice this method adds a tokenId from the registered tokens list which is kept for the owner. these methods are designed to allow limited data retrival functionality on local host environments\\n    /// @dev for local testing purposes mostly, to make it scalable the length is capped to 128. Tokens should be indexed by web2 server not on chain.\\n    /// @param owner the owner to add the token too\\n    /// @param tokenId the tokenId to add\\n    function addToRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        //if the l\\n        if (registeredTokens[owner].length < 256)\\n            registeredTokens[owner].push(tokenId);\\n    }\\n\\n    /// @notice Gets the amount of registered tokens\\n    /// @dev Tokens are indexable instead by their current positon inside of the owner wallets collection, returns a tokenId\\n    /// @param owner the owner to get the length of\\n    function getRegisteredTokenCount(\\n        address owner\\n    ) public view returns (uint256) {\\n        return registeredTokens[owner].length;\\n    }\\n\\n    /// @notice returns a token\\n    /// @dev returns an InfinityObject defined in {InfinityMintObject}\\n    /// @param tokenId the tokenId to get\\n    function get(uint32 tokenId) public view returns (InfinityObject memory) {\\n        if (tokens[tokenId].owner == address(0x0)) revert('invalid token');\\n\\n        return tokens[tokenId];\\n    }\\n\\n    /// @notice Sets the owner field in the token to another value\\n    function transfer(address to, uint32 tokenId) public onlyApproved {\\n        //set to new owner\\n        tokens[tokenId].owner = to;\\n    }\\n\\n    function set(\\n        uint32 tokenId,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        require(data.owner != address(0x0), 'null owner');\\n        require(data.currentTokenId == tokenId, 'tokenID mismatch');\\n        tokens[tokenId] = data;\\n    }\\n\\n    /// @notice use normal set when can because of the checks it does before the set, this does no checks\\n    function setUnsafe(uint32 tokenId, bytes memory data) public onlyApproved {\\n        tokens[tokenId] = abi.decode(data, (InfinityObject));\\n    }\\n\\n    function setPreview(\\n        address owner,\\n        uint256 index,\\n        InfinityObject memory data\\n    ) public onlyApproved {\\n        previews[owner][index] = data;\\n    }\\n\\n    function getPreviewAt(\\n        address owner,\\n        uint256 index\\n    ) external view returns (InfinityObject memory) {\\n        require(\\n            previews[owner][index].owner != address(0x0),\\n            'invalid preview'\\n        );\\n\\n        return previews[owner][index];\\n    }\\n\\n    function findPreviews(\\n        address owner,\\n        uint256 previewCount\\n    ) public view onlyApproved returns (InfinityObject[] memory) {\\n        InfinityObject[] memory temp = new InfinityObject[](previewCount);\\n        for (uint256 i = 0; i < previewCount; ) {\\n            temp[i] = previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return temp;\\n    }\\n\\n    function deletePreview(\\n        address owner,\\n        uint256 previewCount\\n    ) public onlyApproved {\\n        for (uint256 i = 0; i < previewCount; ) {\\n            delete previews[owner][i];\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        delete previewTimestamp[owner];\\n    }\\n\\n    function deleteFromRegisteredTokens(\\n        address owner,\\n        uint32 tokenId\\n    ) public onlyApproved {\\n        uint256 length = registeredTokens[owner].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (registeredTokens[owner][i] == tokenId) {\\n                registeredTokens[owner][i] = registeredTokens[owner][\\n                    length - 1\\n                ];\\n                registeredTokens[owner].pop();\\n                break;\\n            }\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x72b74ba349ccc61b393fcab63b52de1ef8dde72c3335451a742eafa7cea99929\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintUtil.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nlibrary InfinityMintUtil {\\n    function toString(\\n        uint256 _i\\n    ) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return '0';\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n\\n    function filepath(\\n        string memory directory,\\n        string memory file,\\n        string memory extension\\n    ) internal pure returns (string memory) {\\n        return string.concat(directory, file, extension);\\n    }\\n\\n    //checks if two strings (or bytes) are equal\\n    function isEqual(bytes memory s1, bytes memory s2) external pure returns (bool) {\\n    if (s1.length != s2.length) return false;\\n    for (uint256 i = 0; i < s1.length; i++) {\\n        if (s1[i] != s2[i]) return false;\\n    }\\n    return true;\\n}\\n\\n}\\n\",\"keccak256\":\"0xd256bbb4e2a9534e9a21ba4ae8bbf755c254c7d2ba5bd65e099e27f27277e3bc\",\"license\":\"UNLICENSED\"},\"contracts/InfinityMintValues.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\ncontract InfinityMintValues {\\n    mapping(string => uint256) private values;\\n    mapping(string => bool) private booleanValues;\\n    mapping(string => bool) private registeredValues;\\n\\n    address deployer;\\n\\n    constructor() {\\n        deployer = msg.sender;\\n    }\\n\\n    modifier onlyDeployer() {\\n        if (msg.sender != deployer) revert();\\n        _;\\n    }\\n\\n    function setValue(string memory key, uint256 value) public onlyDeployer {\\n        values[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function setupValues(\\n        string[] memory keys,\\n        uint256[] memory _values,\\n        string[] memory booleanKeys,\\n        bool[] memory _booleanValues\\n    ) public onlyDeployer {\\n        require(keys.length == _values.length);\\n        require(booleanKeys.length == _booleanValues.length);\\n        for (uint256 i = 0; i < keys.length; i++) {\\n            setValue(keys[i], _values[i]);\\n        }\\n\\n        for (uint256 i = 0; i < booleanKeys.length; i++) {\\n            setBooleanValue(booleanKeys[i], _booleanValues[i]);\\n        }\\n    }\\n\\n    function setBooleanValue(string memory key, bool value)\\n        public\\n        onlyDeployer\\n    {\\n        booleanValues[key] = value;\\n        registeredValues[key] = true;\\n    }\\n\\n    function isTrue(string memory key) external view returns (bool) {\\n        return booleanValues[key];\\n    }\\n\\n    function getValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) revert('Invalid Value');\\n\\n        return values[key];\\n    }\\n\\n    /// @dev Default value it returns is zero\\n    function tryGetValue(string memory key) external view returns (uint256) {\\n        if (!registeredValues[key]) return 0;\\n\\n        return values[key];\\n    }\\n}\\n\",\"keccak256\":\"0xfc6def9724b4ef9aa3ace6bafaa9fc232c65788adb1349c9ce5f1f9681c3b078\",\"license\":\"UNLICENSED\"},\"contracts/Minter.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './Authentication.sol';\\nimport './InfinityMintStorage.sol';\\nimport './Asset.sol';\\nimport './RandomNumber.sol';\\nimport './InfinityMintObject.sol';\\n\\n/// @title Minter Interface\\n/// @author 0xTinman.eth\\n/// @notice The purpose of this interface is to lay the foundation for a minter contract designed to produce a valid InfinityObject at the end of it\\n/// @dev\\nabstract contract Minter is Authentication {\\n    Asset public assetController;\\n    InfinityMintValues public valuesController;\\n    InfinityMintStorage public storageController;\\n    RandomNumber public randomNumberController;\\n\\n    /*\\n     */\\n    constructor(\\n        address valuesContract,\\n        address storageContract,\\n        address assetContract,\\n        address randomNumberContract\\n    ) {\\n        valuesController = InfinityMintValues(valuesContract);\\n        storageController = InfinityMintStorage(storageContract);\\n        assetController = Asset(assetContract);\\n        randomNumberController = RandomNumber(randomNumberContract);\\n    }\\n\\n    function setAssetController(address assetContract) public onlyApproved {\\n        assetController = Asset(assetContract);\\n    }\\n\\n    function setStorageController(address storageContract) public onlyApproved {\\n        storageController = InfinityMintStorage(storageContract);\\n    }\\n\\n    function setRandomNumberController(address randomNumberContract)\\n        public\\n        onlyApproved\\n    {\\n        randomNumberController = RandomNumber(randomNumberContract);\\n    }\\n\\n    function mint(\\n        uint32 currentTokenId,\\n        address sender,\\n        bytes memory mintData\\n    ) public virtual returns (InfinityMintObject.InfinityObject memory);\\n\\n    /**\\n\\n     */\\n    function getPreview(uint32 currentTokenId, address sender)\\n        external\\n        virtual\\n        returns (uint256 previewCount);\\n\\n    /*\\n\\n    */\\n    function mintPreview(\\n        uint32 index,\\n        uint32 currentTokenId,\\n        address sender\\n    ) external virtual returns (InfinityMintObject.InfinityObject memory);\\n}\\n\",\"keccak256\":\"0x98510e85165cde71eafe3b871406ad752d39dcb4fb143e1e52fc1fbfdca8ec5f\",\"license\":\"UNLICENSED\"},\"contracts/RandomNumber.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './InfinityMintValues.sol';\\n\\n/// @title InfinityMint Random Number Abstract Contract\\n/// @author 0xTinman.eth\\nabstract contract RandomNumber {\\n    uint256 public randomnessFactor;\\n    bool public hasDeployed = false;\\n    uint256 public salt = 1;\\n\\n    InfinityMintValues internal valuesController;\\n\\n    constructor(address valuesContract) {\\n        valuesController = InfinityMintValues(valuesContract);\\n        randomnessFactor = valuesController.getValue('randomessFactor');\\n    }\\n\\n    function getNumber() external returns (uint256) {\\n        unchecked {\\n            ++salt;\\n        }\\n\\n        return returnNumber(valuesController.getValue('maxRandomNumber'), salt);\\n    }\\n\\n    function getMaxNumber(uint256 maxNumber) external returns (uint256) {\\n        unchecked {\\n            ++salt;\\n        }\\n\\n        return returnNumber(maxNumber, salt);\\n    }\\n\\n    /// @notice cheap return number\\n    function returnNumber(uint256 maxNumber, uint256 _salt)\\n        public\\n        view\\n        virtual\\n        returns (uint256)\\n    {\\n        if (maxNumber <= 0) maxNumber = 1;\\n        return (_salt + 3) % maxNumber;\\n    }\\n}\\n\",\"keccak256\":\"0x3902fef7c566f30b6c918fb1c69aeac606f44c065e86b3deba350ec6aea2c253\",\"license\":\"UNLICENSED\"},\"contracts/minter/DefaultMinter.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\n//0xTinman.eth 2021\\npragma solidity ^0.8.0;\\n\\nimport './../Minter.sol';\\nimport './../InfinityMintObject.sol';\\n\\ncontract DefaultMinter is Minter, InfinityMintObject {\\n    /*\\n     */\\n    constructor(\\n        address valuesContract,\\n        address storageContract,\\n        address assetContract,\\n        address randomNumberContract\\n    )\\n        Minter(\\n            valuesContract,\\n            storageContract,\\n            assetContract,\\n            randomNumberContract\\n        )\\n    {}\\n\\n    function mintPreview(\\n        uint32 index,\\n        uint32 currentTokenId,\\n        address sender\\n    )\\n        external\\n        view\\n        virtual\\n        override\\n        onlyApproved\\n        returns (InfinityObject memory)\\n    {\\n        InfinityObject memory temp = storageController.getPreviewAt(\\n            sender,\\n            index\\n        );\\n\\n        //check the owner to see if its the same\\n        if (temp.owner != sender) revert('bad owner');\\n        if (temp.currentTokenId != index) revert('bad index');\\n\\n        return\\n            createInfinityObject(\\n                currentTokenId,\\n                temp.pathId,\\n                temp.pathSize,\\n                temp.assets,\\n                temp.names,\\n                temp.colours,\\n                temp.mintData,\\n                temp.owner,\\n                temp.destinations\\n            );\\n    }\\n\\n    /**\\n\\n     */\\n    function getPreview(uint32 currentTokenId, address sender)\\n        external\\n        virtual\\n        override\\n        onlyApproved\\n        returns (uint256 previewCount)\\n    {\\n        previewCount = valuesController.tryGetValue('previewCount');\\n        if (previewCount == 0) return previewCount;\\n\\n        uint256 nameCount = randomNumberController.getMaxNumber(\\n            valuesController.tryGetValue('nameCount')\\n        );\\n\\n        //pick parent to base previews off of\\n        Asset.PartialStruct memory temp = assetController.pickPath(\\n            currentTokenId,\\n            randomNumberController\\n        );\\n\\n        //return it into a real object\\n        InfinityObject memory obj = createInfinityObject(\\n            0, //in this context this is the \\\"preview Id\\\", and we start at zero\\n            assetController.getNextPath(),\\n            temp.pathSize,\\n            temp.assets,\\n            temp.names,\\n            temp.colours,\\n            temp.mintData,\\n            sender,\\n            new address[](0)\\n        );\\n\\n        //store it\\n        storageController.setPreview(sender, 0, obj);\\n\\n        //start at index 1 as we have done 0, base all future previews off of zero\\n        for (uint32 i = 1; i < previewCount; ) {\\n            obj.currentTokenId = i;\\n            //get new assets\\n            obj.assets = assetController.getRandomAsset(\\n                obj.pathId,\\n                randomNumberController\\n            );\\n            //get new colours\\n            obj.colours = assetController.getColours(\\n                obj.pathId,\\n                randomNumberController\\n            );\\n            //get new names\\n            obj.names = assetController.getNames(\\n                nameCount,\\n                randomNumberController\\n            );\\n\\n            //store this variantion\\n            storageController.setPreview(sender, i, obj);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return previewCount;\\n    }\\n\\n    /*\\n\\n    */\\n    function mint(\\n        uint32 currentTokenId,\\n        address sender,\\n        bytes memory\\n    ) public virtual override onlyApproved returns (InfinityObject memory) {\\n        Asset.PartialStruct memory temp = assetController.pickPath(\\n            currentTokenId,\\n            randomNumberController\\n        );\\n\\n        return\\n            createInfinityObject(\\n                currentTokenId,\\n                assetController.getNextPath(),\\n                temp.pathSize,\\n                temp.assets,\\n                temp.names,\\n                temp.colours,\\n                temp.mintData,\\n                sender,\\n                new address[](0)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x36db887197c5df4f349a3e9e36d49a7d672abc020ad727b783513e621c946039\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c6a38038062001c6a8339810160408190526200003491620000cc565b60008054336001600160a01b0319918216811783558252600260205260408220805460ff19166001908117909155919091556004805482166001600160a01b03968716179055600580548216948616949094179093556003805484169285169290921790915560068054909216921691909117905562000129565b80516001600160a01b0381168114620000c757600080fd5b919050565b60008060008060808587031215620000e357600080fd5b620000ee85620000af565b9350620000fe60208601620000af565b92506200010e60408601620000af565b91506200011e60608601620000af565b905092959194509250565b611b3180620001396000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c80630c380cf0146100e057806310a8c7a9146101105780631a5dad51146101255780631bc8bf931461014657806331ed86d2146101665780634c73947614610179578063573f86001461018c5780636fa13f3c1461019f5780639bb2ad88146101b2578063aed5ef82146101c5578063d15d4150146101d8578063d5f39488146101fb578063d8b964e61461020e578063ec2b46c314610231578063f2fde38b14610244578063fe528b1814610257578063fe684c0e1461026a575b600080fd5b6004546100f3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012361011e3660046110f7565b61027d565b005b6101386101333660046111a7565b61031d565b604051908152602001610107565b610159610154366004611207565b6108d3565b60405161010791906114b5565b6101236101743660046110f7565b610a47565b6101236101873660046114c8565b610ada565b6003546100f3906001600160a01b031681565b6101236101ad3660046114c8565b610b40565b6101596101c03660046114e5565b610ba6565b6006546100f3906001600160a01b031681565b6101eb6101e63660046114c8565b610d41565b6040519015158152602001610107565b6000546100f3906001600160a01b031681565b6101eb61021c3660046114c8565b60026020526000908152604090205460ff1681565b6005546100f3906001600160a01b031681565b6101236102523660046114c8565b610d78565b6101236102653660046114c8565b610e18565b610123610278366004611530565b610e7e565b6000546001600160a01b031633146102b05760405162461bcd60e51b81526004016102a790611563565b60405180910390fd5b80516102bb57600080fd5b60005b8151811015610319576001600260008484815181106102df576102df611589565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016102be565b5050565b600080546001600160a01b031633148061034657503360009081526002602052604090205460ff165b6103625760405162461bcd60e51b81526004016102a79061159f565b6004805460405163e7b6dac960e01b8152602092810192909252600c60248301526b1c1c995d9a595dd0dbdd5b9d60a21b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec91906115c5565b9050806103f8576108cd565b6006546004805460405163e7b6dac960e01b81526000936001600160a01b039081169363a0d0ca0f939091169163e7b6dac99161045391016020808252600990820152681b985b5950dbdd5b9d60ba1b604082015260600190565b602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906115c5565b6040518263ffffffff1660e01b81526004016104b291815260200190565b6020604051808303816000875af11580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906115c5565b60035460065460405163433ee8cd60e01b81529293506000926001600160a01b039283169263433ee8cd92610532928a92909116906004016115de565b6000604051808303816000875af1158015610551573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105799190810190611760565b905060006106456000600360009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f9919061185a565b602085015160408601516060870151608088015160a08901518c60005b60405190808252806020026020018201604052801561063f578160200160208202803683370190505b50610f60565b600554604051632adccb2560e21b81529192506001600160a01b03169063ab732c949061067b9088906000908690600401611877565b600060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b506001925050505b848163ffffffff1610156108c85763ffffffff811660408084019190915260035483516006549251638e6e826d60e01b81526001600160a01b0392831693638e6e826d9361070593929116906004016115de565b6000604051808303816000875af1158015610724573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074c91908101906118a7565b60c0830152600354825160065460405163eb2c2da360e01b81526001600160a01b039384169363eb2c2da3936107899390929116906004016115de565b6000604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d091908101906118a7565b6080830152600354600654604051632637f35160e11b8152600481018790526001600160a01b039182166024820152911690634c6fe6a2906044016000604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261085291908101906118e3565b60e0830152600554604051632adccb2560e21b81526001600160a01b039091169063ab732c949061088b90899085908790600401611917565b600060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050508060010190506106b1565b505050505b92915050565b6108db610fc4565b6000546001600160a01b031633148061090357503360009081526002602052604090205460ff165b61091f5760405162461bcd60e51b81526004016102a79061159f565b60035460065460405163433ee8cd60e01b81526000926001600160a01b039081169263433ee8cd92610957928a9216906004016115de565b6000604051808303816000875af1158015610976573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261099e9190810190611760565b9050610a3c85600360009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b919061185a565b602084015160408501516060860151608087015160a08801518b6000610616565b9150505b9392505050565b6000546001600160a01b03163314610a715760405162461bcd60e51b81526004016102a790611563565b8051610a7c57600080fd5b60005b815181101561031957600060026000848481518110610aa057610aa0611589565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610a7f565b6000546001600160a01b0316331480610b0257503360009081526002602052604090205460ff165b610b1e5760405162461bcd60e51b81526004016102a79061159f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610b6857503360009081526002602052604090205460ff165b610b845760405162461bcd60e51b81526004016102a79061159f565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b610bae610fc4565b6000546001600160a01b0316331480610bd657503360009081526002602052604090205460ff165b610bf25760405162461bcd60e51b81526004016102a79061159f565b60055460405163fccc3cd560e01b81526001600160a01b03848116600483015263ffffffff87166024830152600092169063fccc3cd590604401600060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c7191908101906119b6565b9050826001600160a01b031681606001516001600160a01b031614610cc45760405162461bcd60e51b81526020600482015260096024820152683130b21037bbb732b960b91b60448201526064016102a7565b8463ffffffff16816040015163ffffffff1614610d0f5760405162461bcd60e51b81526020600482015260096024820152680c4c2c840d2dcc8caf60bb1b60448201526064016102a7565b610a3c84826000015183602001518460c001518560e0015186608001518760a001518860600151896101000151610f60565b600080546001600160a01b03838116911614806108cd5750506001600160a01b031660009081526002602052604090205460ff1690565b6000546001600160a01b03163314610da25760405162461bcd60e51b81526004016102a790611563565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b0316331480610e4057503360009081526002602052604090205460ff165b610e5c5760405162461bcd60e51b81526004016102a79061159f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ea85760405162461bcd60e51b81526004016102a790611563565b6000546001600160a01b0383811691161415610eff5760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016102a7565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b610f68610fc4565b50604080516101208101825263ffffffff998a168152978916602089015298909716978601979097526001600160a01b039096166060850152608084015260a083019490945260c082015260e081019290925261010082015290565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156110635761106361102b565b60405290565b60405161012081016001600160401b03811182821017156110635761106361102b565b604051601f8201601f191681016001600160401b03811182821017156110b4576110b461102b565b604052919050565b60006001600160401b038211156110d5576110d561102b565b5060051b60200190565b6001600160a01b03811681146110f457600080fd5b50565b6000602080838503121561110a57600080fd5b82356001600160401b0381111561112057600080fd5b8301601f8101851361113157600080fd5b803561114461113f826110bc565b61108c565b81815260059190911b8201830190838101908783111561116357600080fd5b928401925b8284101561118a57833561117b816110df565b82529284019290840190611168565b979650505050505050565b63ffffffff811681146110f457600080fd5b600080604083850312156111ba57600080fd5b82356111c581611195565b915060208301356111d5816110df565b809150509250929050565b60006001600160401b038211156111f9576111f961102b565b50601f01601f191660200190565b60008060006060848603121561121c57600080fd5b833561122781611195565b92506020840135611237816110df565b915060408401356001600160401b0381111561125257600080fd5b8401601f8101861361126357600080fd5b803561127161113f826111e0565b81815287602083850101111561128657600080fd5b816020840160208301376000602083830101528093505050509250925092565b600081518084526020808501945080840160005b838110156112dc57815163ffffffff16875295820195908201906001016112ba565b509495945050505050565b60005b838110156113025781810151838201526020016112ea565b83811115611311576000848401525b50505050565b6000815180845261132f8160208601602086016112e7565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561138b578284038952611379848351611317565b98850198935090840190600101611361565b5091979650505050505050565b600081518084526020808501945080840160005b838110156112dc5781516001600160a01b0316875295820195908201906001016113ac565b805163ffffffff168252600061012060208301516113f7602086018263ffffffff169052565b50604083015161140f604086018263ffffffff169052565b50606083015161142a60608601826001600160a01b03169052565b506080830151816080860152611442828601826112a6565b91505060a083015184820360a086015261145c8282611317565b91505060c083015184820360c086015261147682826112a6565b91505060e083015184820360e08601526114908282611343565b91505061010080840151858303828701526114ab8382611398565b9695505050505050565b602081526000610a4060208301846113d1565b6000602082840312156114da57600080fd5b8135610a40816110df565b6000806000606084860312156114fa57600080fd5b833561150581611195565b9250602084013561151581611195565b91506040840135611525816110df565b809150509250925092565b6000806040838503121561154357600080fd5b823561154e816110df565b9150602083013580151581146111d557600080fd5b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b6000602082840312156115d757600080fd5b5051919050565b63ffffffff9290921682526001600160a01b0316602082015260400190565b805161160881611195565b919050565b600082601f83011261161e57600080fd5b8151602061162e61113f836110bc565b82815260059290921b8401810191818101908684111561164d57600080fd5b8286015b8481101561167157805161166481611195565b8352918301918301611651565b509695505050505050565b600061168a61113f846111e0565b905082815283838301111561169e57600080fd5b610a408360208301846112e7565b600082601f8301126116bd57600080fd5b815160206116cd61113f836110bc565b82815260059290921b840181019181810190868411156116ec57600080fd5b8286015b848110156116715780516001600160401b0381111561170f5760008081fd5b8701603f810189136117215760008081fd5b61173289868301516040840161167c565b8452509183019183016116f0565b600082601f83011261175157600080fd5b610a408383516020850161167c565b60006020828403121561177257600080fd5b81516001600160401b038082111561178957600080fd5b9083019060c0828603121561179d57600080fd5b6117a5611041565b6117ae836115fd565b81526117bc602084016115fd565b60208201526040830151828111156117d357600080fd5b6117df8782860161160d565b6040830152506060830151828111156117f757600080fd5b611803878286016116ac565b60608301525060808301518281111561181b57600080fd5b6118278782860161160d565b60808301525060a08301518281111561183f57600080fd5b61184b87828601611740565b60a08301525095945050505050565b60006020828403121561186c57600080fd5b8151610a4081611195565b60018060a01b038416815282602082015260606040820152600061189e60608301846113d1565b95945050505050565b6000602082840312156118b957600080fd5b81516001600160401b038111156118cf57600080fd5b6118db8482850161160d565b949350505050565b6000602082840312156118f557600080fd5b81516001600160401b0381111561190b57600080fd5b6118db848285016116ac565b6001600160a01b038416815263ffffffff8316602082015260606040820181905260009061189e908301846113d1565b8051611608816110df565b600082601f83011261196357600080fd5b8151602061197361113f836110bc565b82815260059290921b8401810191818101908684111561199257600080fd5b8286015b848110156116715780516119a9816110df565b8352918301918301611996565b6000602082840312156119c857600080fd5b81516001600160401b03808211156119df57600080fd5b9083019061012082860312156119f457600080fd5b6119fc611069565b611a05836115fd565b8152611a13602084016115fd565b6020820152611a24604084016115fd565b6040820152611a3560608401611947565b6060820152608083015182811115611a4c57600080fd5b611a588782860161160d565b60808301525060a083015182811115611a7057600080fd5b611a7c87828601611740565b60a08301525060c083015182811115611a9457600080fd5b611aa08782860161160d565b60c08301525060e083015182811115611ab857600080fd5b611ac4878286016116ac565b60e0830152506101008084015183811115611ade57600080fd5b611aea88828701611952565b91830191909152509594505050505056fea26469706673582212201e273b04e707d6b6410e63e2ead0ddea14f8f4a30a7686b8f579263823c7033e64736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100db5760003560e01c80630c380cf0146100e057806310a8c7a9146101105780631a5dad51146101255780631bc8bf931461014657806331ed86d2146101665780634c73947614610179578063573f86001461018c5780636fa13f3c1461019f5780639bb2ad88146101b2578063aed5ef82146101c5578063d15d4150146101d8578063d5f39488146101fb578063d8b964e61461020e578063ec2b46c314610231578063f2fde38b14610244578063fe528b1814610257578063fe684c0e1461026a575b600080fd5b6004546100f3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012361011e3660046110f7565b61027d565b005b6101386101333660046111a7565b61031d565b604051908152602001610107565b610159610154366004611207565b6108d3565b60405161010791906114b5565b6101236101743660046110f7565b610a47565b6101236101873660046114c8565b610ada565b6003546100f3906001600160a01b031681565b6101236101ad3660046114c8565b610b40565b6101596101c03660046114e5565b610ba6565b6006546100f3906001600160a01b031681565b6101eb6101e63660046114c8565b610d41565b6040519015158152602001610107565b6000546100f3906001600160a01b031681565b6101eb61021c3660046114c8565b60026020526000908152604090205460ff1681565b6005546100f3906001600160a01b031681565b6101236102523660046114c8565b610d78565b6101236102653660046114c8565b610e18565b610123610278366004611530565b610e7e565b6000546001600160a01b031633146102b05760405162461bcd60e51b81526004016102a790611563565b60405180910390fd5b80516102bb57600080fd5b60005b8151811015610319576001600260008484815181106102df576102df611589565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016102be565b5050565b600080546001600160a01b031633148061034657503360009081526002602052604090205460ff165b6103625760405162461bcd60e51b81526004016102a79061159f565b6004805460405163e7b6dac960e01b8152602092810192909252600c60248301526b1c1c995d9a595dd0dbdd5b9d60a21b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec91906115c5565b9050806103f8576108cd565b6006546004805460405163e7b6dac960e01b81526000936001600160a01b039081169363a0d0ca0f939091169163e7b6dac99161045391016020808252600990820152681b985b5950dbdd5b9d60ba1b604082015260600190565b602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906115c5565b6040518263ffffffff1660e01b81526004016104b291815260200190565b6020604051808303816000875af11580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906115c5565b60035460065460405163433ee8cd60e01b81529293506000926001600160a01b039283169263433ee8cd92610532928a92909116906004016115de565b6000604051808303816000875af1158015610551573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105799190810190611760565b905060006106456000600360009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f9919061185a565b602085015160408601516060870151608088015160a08901518c60005b60405190808252806020026020018201604052801561063f578160200160208202803683370190505b50610f60565b600554604051632adccb2560e21b81529192506001600160a01b03169063ab732c949061067b9088906000908690600401611877565b600060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b506001925050505b848163ffffffff1610156108c85763ffffffff811660408084019190915260035483516006549251638e6e826d60e01b81526001600160a01b0392831693638e6e826d9361070593929116906004016115de565b6000604051808303816000875af1158015610724573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074c91908101906118a7565b60c0830152600354825160065460405163eb2c2da360e01b81526001600160a01b039384169363eb2c2da3936107899390929116906004016115de565b6000604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d091908101906118a7565b6080830152600354600654604051632637f35160e11b8152600481018790526001600160a01b039182166024820152911690634c6fe6a2906044016000604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261085291908101906118e3565b60e0830152600554604051632adccb2560e21b81526001600160a01b039091169063ab732c949061088b90899085908790600401611917565b600060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050508060010190506106b1565b505050505b92915050565b6108db610fc4565b6000546001600160a01b031633148061090357503360009081526002602052604090205460ff165b61091f5760405162461bcd60e51b81526004016102a79061159f565b60035460065460405163433ee8cd60e01b81526000926001600160a01b039081169263433ee8cd92610957928a9216906004016115de565b6000604051808303816000875af1158015610976573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261099e9190810190611760565b9050610a3c85600360009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b919061185a565b602084015160408501516060860151608087015160a08801518b6000610616565b9150505b9392505050565b6000546001600160a01b03163314610a715760405162461bcd60e51b81526004016102a790611563565b8051610a7c57600080fd5b60005b815181101561031957600060026000848481518110610aa057610aa0611589565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610a7f565b6000546001600160a01b0316331480610b0257503360009081526002602052604090205460ff165b610b1e5760405162461bcd60e51b81526004016102a79061159f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610b6857503360009081526002602052604090205460ff165b610b845760405162461bcd60e51b81526004016102a79061159f565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b610bae610fc4565b6000546001600160a01b0316331480610bd657503360009081526002602052604090205460ff165b610bf25760405162461bcd60e51b81526004016102a79061159f565b60055460405163fccc3cd560e01b81526001600160a01b03848116600483015263ffffffff87166024830152600092169063fccc3cd590604401600060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c7191908101906119b6565b9050826001600160a01b031681606001516001600160a01b031614610cc45760405162461bcd60e51b81526020600482015260096024820152683130b21037bbb732b960b91b60448201526064016102a7565b8463ffffffff16816040015163ffffffff1614610d0f5760405162461bcd60e51b81526020600482015260096024820152680c4c2c840d2dcc8caf60bb1b60448201526064016102a7565b610a3c84826000015183602001518460c001518560e0015186608001518760a001518860600151896101000151610f60565b600080546001600160a01b03838116911614806108cd5750506001600160a01b031660009081526002602052604090205460ff1690565b6000546001600160a01b03163314610da25760405162461bcd60e51b81526004016102a790611563565b600080546001600160a01b03908116825260026020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b0316331480610e4057503360009081526002602052604090205460ff165b610e5c5760405162461bcd60e51b81526004016102a79061159f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ea85760405162461bcd60e51b81526004016102a790611563565b6000546001600160a01b0383811691161415610eff5760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016102a7565b6001600160a01b038216600081815260026020908152604091829020805460ff1916851515908117909155915191825233917ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d341695910160405180910390a35050565b610f68610fc4565b50604080516101208101825263ffffffff998a168152978916602089015298909716978601979097526001600160a01b039096166060850152608084015260a083019490945260c082015260e081019290925261010082015290565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156110635761106361102b565b60405290565b60405161012081016001600160401b03811182821017156110635761106361102b565b604051601f8201601f191681016001600160401b03811182821017156110b4576110b461102b565b604052919050565b60006001600160401b038211156110d5576110d561102b565b5060051b60200190565b6001600160a01b03811681146110f457600080fd5b50565b6000602080838503121561110a57600080fd5b82356001600160401b0381111561112057600080fd5b8301601f8101851361113157600080fd5b803561114461113f826110bc565b61108c565b81815260059190911b8201830190838101908783111561116357600080fd5b928401925b8284101561118a57833561117b816110df565b82529284019290840190611168565b979650505050505050565b63ffffffff811681146110f457600080fd5b600080604083850312156111ba57600080fd5b82356111c581611195565b915060208301356111d5816110df565b809150509250929050565b60006001600160401b038211156111f9576111f961102b565b50601f01601f191660200190565b60008060006060848603121561121c57600080fd5b833561122781611195565b92506020840135611237816110df565b915060408401356001600160401b0381111561125257600080fd5b8401601f8101861361126357600080fd5b803561127161113f826111e0565b81815287602083850101111561128657600080fd5b816020840160208301376000602083830101528093505050509250925092565b600081518084526020808501945080840160005b838110156112dc57815163ffffffff16875295820195908201906001016112ba565b509495945050505050565b60005b838110156113025781810151838201526020016112ea565b83811115611311576000848401525b50505050565b6000815180845261132f8160208601602086016112e7565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561138b578284038952611379848351611317565b98850198935090840190600101611361565b5091979650505050505050565b600081518084526020808501945080840160005b838110156112dc5781516001600160a01b0316875295820195908201906001016113ac565b805163ffffffff168252600061012060208301516113f7602086018263ffffffff169052565b50604083015161140f604086018263ffffffff169052565b50606083015161142a60608601826001600160a01b03169052565b506080830151816080860152611442828601826112a6565b91505060a083015184820360a086015261145c8282611317565b91505060c083015184820360c086015261147682826112a6565b91505060e083015184820360e08601526114908282611343565b91505061010080840151858303828701526114ab8382611398565b9695505050505050565b602081526000610a4060208301846113d1565b6000602082840312156114da57600080fd5b8135610a40816110df565b6000806000606084860312156114fa57600080fd5b833561150581611195565b9250602084013561151581611195565b91506040840135611525816110df565b809150509250925092565b6000806040838503121561154357600080fd5b823561154e816110df565b9150602083013580151581146111d557600080fd5b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b1b9bdd08185c1c1c9bdd995960a21b604082015260600190565b6000602082840312156115d757600080fd5b5051919050565b63ffffffff9290921682526001600160a01b0316602082015260400190565b805161160881611195565b919050565b600082601f83011261161e57600080fd5b8151602061162e61113f836110bc565b82815260059290921b8401810191818101908684111561164d57600080fd5b8286015b8481101561167157805161166481611195565b8352918301918301611651565b509695505050505050565b600061168a61113f846111e0565b905082815283838301111561169e57600080fd5b610a408360208301846112e7565b600082601f8301126116bd57600080fd5b815160206116cd61113f836110bc565b82815260059290921b840181019181810190868411156116ec57600080fd5b8286015b848110156116715780516001600160401b0381111561170f5760008081fd5b8701603f810189136117215760008081fd5b61173289868301516040840161167c565b8452509183019183016116f0565b600082601f83011261175157600080fd5b610a408383516020850161167c565b60006020828403121561177257600080fd5b81516001600160401b038082111561178957600080fd5b9083019060c0828603121561179d57600080fd5b6117a5611041565b6117ae836115fd565b81526117bc602084016115fd565b60208201526040830151828111156117d357600080fd5b6117df8782860161160d565b6040830152506060830151828111156117f757600080fd5b611803878286016116ac565b60608301525060808301518281111561181b57600080fd5b6118278782860161160d565b60808301525060a08301518281111561183f57600080fd5b61184b87828601611740565b60a08301525095945050505050565b60006020828403121561186c57600080fd5b8151610a4081611195565b60018060a01b038416815282602082015260606040820152600061189e60608301846113d1565b95945050505050565b6000602082840312156118b957600080fd5b81516001600160401b038111156118cf57600080fd5b6118db8482850161160d565b949350505050565b6000602082840312156118f557600080fd5b81516001600160401b0381111561190b57600080fd5b6118db848285016116ac565b6001600160a01b038416815263ffffffff8316602082015260606040820181905260009061189e908301846113d1565b8051611608816110df565b600082601f83011261196357600080fd5b8151602061197361113f836110bc565b82815260059290921b8401810191818101908684111561199257600080fd5b8286015b848110156116715780516119a9816110df565b8352918301918301611996565b6000602082840312156119c857600080fd5b81516001600160401b03808211156119df57600080fd5b9083019061012082860312156119f457600080fd5b6119fc611069565b611a05836115fd565b8152611a13602084016115fd565b6020820152611a24604084016115fd565b6040820152611a3560608401611947565b6060820152608083015182811115611a4c57600080fd5b611a588782860161160d565b60808301525060a083015182811115611a7057600080fd5b611a7c87828601611740565b60a08301525060c083015182811115611a9457600080fd5b611aa08782860161160d565b60c08301525060e083015182811115611ab857600080fd5b611ac4878286016116ac565b60e0830152506101008084015183811115611ade57600080fd5b611aea88828701611952565b91830191909152509594505050505056fea26469706673582212201e273b04e707d6b6410e63e2ead0ddea14f8f4a30a7686b8f579263823c7033e64736f6c634300080c0033",
  "libraries": {
    "InfinityMintUtil": "0x3411DEa54B2FB5aB203616bB614D61794432d7B1"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 458,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 461,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "executionCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 465,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "approved",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7375,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "assetController",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(Asset)453"
      },
      {
        "astId": 7378,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "valuesController",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(InfinityMintValues)7070"
      },
      {
        "astId": 7381,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "storageController",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(InfinityMintStorage)6696"
      },
      {
        "astId": 7384,
        "contract": "contracts/minter/DefaultMinter.sol:DefaultMinter",
        "label": "randomNumberController",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(RandomNumber)7944"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Asset)453": {
        "encoding": "inplace",
        "label": "contract Asset",
        "numberOfBytes": "20"
      },
      "t_contract(InfinityMintStorage)6696": {
        "encoding": "inplace",
        "label": "contract InfinityMintStorage",
        "numberOfBytes": "20"
      },
      "t_contract(InfinityMintValues)7070": {
        "encoding": "inplace",
        "label": "contract InfinityMintValues",
        "numberOfBytes": "20"
      },
      "t_contract(RandomNumber)7944": {
        "encoding": "inplace",
        "label": "contract RandomNumber",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}